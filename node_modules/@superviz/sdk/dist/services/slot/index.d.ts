import * as Socket from '@superviz/socket-client';
import { Participant, Slot } from '../../common/types/participant.types';
import { Store, StoreType } from '../../common/types/stores.types';
export declare class SlotService {
    private room;
    private useStore;
    private isAssigningSlot;
    slot: Slot;
    constructor(room: Socket.Room, useStore: <T extends StoreType>(name: T) => Store<T>);
    /**
     * @function assignSlot
     * @description Assigns a slot to the participant
     * @returns void
     */
    assignSlot(): Promise<Slot>;
    /**
     * @function setDefaultSlot
     * @description Removes the slot from the participant
     * @returns void
     */
    setDefaultSlot(): void;
    private onPresenceUpdate;
    participantNeedsSlot: (participant: Participant) => boolean;
    /**
     * @function validateSlotType
     * @description validate if the participant needs a slot
     * @param {Participant} participant - new participant data
     * @returns {void}
     */
    private validateSlotType;
}
