import{j as x}from"./chunk-AY5577XS.js";import{a as i}from"./chunk-XDQDK5AN.js";import"./chunk-RSMB47NK.js";import{a as y}from"./chunk-6U6BYUHV.js";import{a as b}from"./chunk-MLLFZOUT.js";import{a as v,e as g,f}from"./chunk-WH4S5YLH.js";import"./chunk-OQBMJDJ3.js";import{g as p,i as h}from"./chunk-3ZCZGH34.js";h();var H=b(g),A=[H.styles,x],o=class extends H{constructor(){super();this.onTogglePinActive=({detail:{isActive:e}})=>{this.isActive=e};this.isHidden=!0,this.positionStyles="top: 20px; left: 20px;",this.shouldHide=!1,this.commentsPosition="left"}firstUpdated(e){super.firstUpdated(e),this.updateComplete.then(()=>{y.call(this,["comments"])}),this.mouseHovering=!1;let t=this.shadowRoot.querySelector(".comments__floating-button");t.addEventListener("mouseenter",()=>{setTimeout(()=>t.classList.add("comments-floating-button-hovered"),300),this.mouseHovering=!0}),t.addEventListener("mouseleave",()=>{t.classList.remove("comments-floating-button-hovered"),this.mouseHovering=!1})}toggle(){this.emitEvent("toggle",{})}connectedCallback(){super.connectedCallback(),window.document.body.addEventListener("toggle-annotation-sidebar",()=>{this.isHidden=!this.isHidden}),window.document.body.addEventListener("toggle-pin-active",this.onTogglePinActive)}disconnectedCallback(){super.disconnectedCallback(),window.document.body.removeEventListener("toggle-annotation-sidebar",()=>{this.isHidden=!this.isHidden}),window.document.body.removeEventListener("toggle-pin-active",this.onTogglePinActive)}updated(e){super.updated(e),this.updateComplete.then(()=>{let t=this.shadowRoot.querySelector(".comments__floating-button");t&&t.setAttribute("style",this.positionStyles)})}calculateIfShouldHide(){var u;let e=(u=document.getElementsByTagName("superviz-comments")[0])==null?void 0:u.shadowRoot.querySelector(".superviz-comments"),t=this.shadowRoot.querySelector(".comments__floating-button");if(!e||!t)return;let{left:s,right:n,top:r,bottom:c}=e.getBoundingClientRect(),{left:d,right:a,top:l,bottom:m}=t.getBoundingClientRect(),_=c>l&&m>r,w=r<m&&l<c,S=n>d&&a>s,C=s<a&&d<n;this.shouldHide=(w||_)&&(S||C)}render(){this.calculateIfShouldHide();let e={"comments__floating-button":!0,"hide-button":!this.isHidden&&this.shouldHide,"is-active":this.isActive,"is-inactive":!this.isActive},t={"comments__floating-button-text-box":!0,"comments__floating-button-text-box--hovered":this.mouseHovering},s={text:!0,"text-big":!0,"text-bold":!0,"not-hovered":!this.mouseHovering,"comments__floating-button__text":!0,textActive:this.isActive,textInactive:!this.isActive};return v` <button @click=${this.toggle} class="${i(e)}">
      <div class="comments__floating-button__icon">
        <superviz-icon
          size="sm"
          name="comment"
          color=${this.mouseHovering||this.isActive?"white":"black"}
        ></superviz-icon>
        <svg class="cross" width="8px" height="8px" viewBox="0 0 8 8">
          <rect class="cross-bar-1" x="0" y="3" width="8px" height="2px" />
          <rect class="cross-bar-2" x="0" y="3" width="8px" height="2px" />
        </svg>
      </div>
      <div class=${i(t)}>
        <p class="${i(s)} comment">Comment</p>
        <p class="${i(s)} cancel">Cancel</p>
      </div>
    </button>`}};o.styles=A,o.properties={positionStyles:{type:String},isHidden:{type:Boolean},commentsPosition:{type:String},isActive:{type:Boolean},mouseHovering:{type:Boolean}},o=p([f("superviz-comments-button")],o);export{o as CommentsFloatButton};
//# sourceMappingURL=float-button-LC6VIML7.js.map
