{
  "version": 3,
  "sources": ["../../src/web-components/comments/components/annotation-item.ts"],
  "sourcesContent": ["import { CSSResultGroup, LitElement, PropertyValueMap, html } from 'lit';\n\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ParticipantByGroupApi } from '../../../common/types/participant.types';\nimport { Annotation, Comment } from '../../../components/comments/types';\nimport { WebComponentsBase } from '../../base';\nimport importStyle from '../../base/utils/importStyle';\nimport { annotationItemStyle } from '../css';\n\nimport { AnnotationFilter } from './types';\nimport { CreateElement } from '../../global/decorators/create-element.decorator';\n\nconst WebComponentsBaseElement = WebComponentsBase(LitElement);\nconst styles: CSSResultGroup[] = [WebComponentsBaseElement.styles, annotationItemStyle];\n\n@CreateElement('superviz-comments-annotation-item')\nexport class CommentsAnnotationItem extends WebComponentsBaseElement {\n  static styles = styles;\n\n  declare annotation: Annotation;\n  declare expandComments: boolean;\n  declare selected: string;\n  declare resolved: boolean;\n  declare shouldShowUndoResolved: boolean;\n  declare isLastAnnotation: boolean;\n  declare annotationFilter: string;\n  declare participantsList: ParticipantByGroupApi[];\n  declare hideInput: boolean;\n\n  static properties = {\n    annotation: { type: Object },\n    expandComments: { type: Boolean },\n    selected: { type: String, reflect: true },\n    resolved: { type: Boolean },\n    shouldShowUndoResolved: { type: Boolean },\n    isLastAnnotation: { type: Boolean },\n    annotationFilter: { type: String },\n    participantsList: { type: Object },\n    hideInput: { type: Boolean },\n  };\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties);\n    this.updateComplete.then(() => {\n      importStyle.call(this, ['comments']);\n    });\n  }\n\n  private get filterIsAll(): boolean {\n    return this.annotationFilter === AnnotationFilter.ALL;\n  }\n\n  private get filterIsResolved(): boolean {\n    return this.annotationFilter === AnnotationFilter.RESOLVED;\n  }\n\n  private get shouldHideAnnotation() {\n    return {\n      hidden: (this.resolved && this.filterIsAll) || (!this.resolved && this.filterIsResolved),\n    };\n  }\n\n  private get replies(): number {\n    return [...this.annotation.comments].splice(1).length;\n  }\n\n  private get repliesSize(): number {\n    return this.replies >= 5 ? 5 : this.replies;\n  }\n\n  private get replyText(): string {\n    return this.replies !== 1 ? 'replies' : 'reply';\n  }\n\n  private get isSelected(): boolean {\n    return this.selected === this.annotation.uuid;\n  }\n\n  private get annotationClasses() {\n    return {\n      comments__thread: true,\n      'comments__thread--selected': this.isSelected,\n      'extra-space-bottom': this.replies,\n    };\n  }\n\n  private get mainAnnotationClasses() {\n    return {\n      'comments__main-annotation': true,\n      'comments__main-annotation--selected': this.isSelected,\n    };\n  }\n\n  private get hrClasses() {\n    return {\n      'sv-hr': true,\n      hidden: this.isLastAnnotation,\n    };\n  }\n\n  private get avatarCommentsClasses() {\n    return {\n      'avatars-comments': true,\n      'comment-avatar--expand': !this.expandComments && this.replies > 1,\n      invisible: !(!this.expandComments && this.replies >= 1),\n    };\n  }\n\n  private get containerWrapperClasses() {\n    return {\n      'comments-container-wrapper': true,\n      show: this.isSelected && this.expandComments,\n    };\n  }\n\n  private get commentsClasses() {\n    return {\n      'comments-container': true,\n      'comment-item--expand': this.isSelected && this.expandComments,\n      show: this.isSelected && this.expandComments,\n    };\n  }\n\n  protected updated(changedProperties: Map<string | number | symbol, unknown>) {\n    if (changedProperties.has('selected')) {\n      const isSelected = this.selected === this.annotation.uuid;\n      this.expandComments = isSelected;\n    }\n  }\n\n  private selectAnnotation = (event: PointerEvent): void => {\n    const { uuid } = this.annotation;\n    document.body.dispatchEvent(new CustomEvent('select-annotation', { detail: { uuid } }));\n  };\n\n  private createComment({ detail }: CustomEvent) {\n    const { text, mentions } = detail;\n\n    this.emitEvent('create-comment', {\n      uuid: this.annotation.uuid,\n      mentions,\n      text,\n    });\n  }\n\n  private resolveAnnotation = ({ detail }: CustomEvent) => {\n    const { uuid } = this.annotation;\n    const { resolved, type } = detail;\n    const isResolveAnnotation =\n      type === 'resolve-annotation' && this.annotationFilter === AnnotationFilter.ALL;\n\n    this.emitEvent('resolve-annotation', {\n      uuid,\n      resolved,\n    });\n\n    if (isResolveAnnotation) {\n      this.shouldShowUndoResolved = true;\n    }\n  };\n\n  private hideUndoResolved = () => {\n    this.shouldShowUndoResolved = false;\n  };\n\n  private generateAvatarCommentsTemplate() {\n    const avatarDivs = [];\n\n    for (let index = 1; index <= this.repliesSize; index++) {\n      if (this.annotation.comments[index]?.participant?.avatar) {\n        avatarDivs.push(html`\n          <div class=\"avatar\">\n            <img src=${this.annotation.comments[index]?.participant?.avatar} />\n          </div>\n        `);\n      } else {\n        avatarDivs.push(html`\n          <div class=\"avatar\">\n            <p class=\"text text-bold\">\n              ${this.annotation.comments[index]?.participant.name[0]?.toUpperCase() || 'A'}\n            </p>\n          </div>\n        `);\n      }\n    }\n\n    return html`\n      ${avatarDivs}\n      <div class=\"text text-big sv-gray-500\">${this.replies} ${this.replyText}</div>\n    `;\n  }\n\n  private generateExpandedCommentsTemplate = (comment: Comment, index: number) => {\n    if (index === 0) return html``;\n\n    return html`\n      <superviz-comments-comment-item\n        uuid=${comment.uuid}\n        avatar=${this.annotation?.comments?.at(index)?.participant?.avatar}\n        username=${comment.participant.name || 'Anonymous'}\n        text=${comment.text}\n        createdAt=${comment.createdAt}\n        annotationId=${this.annotation.uuid}\n        participantsList=${JSON.stringify(this.participantsList)}\n        mentions=${JSON.stringify(comment.mentions)}\n        class=\"comments__replies\"\n      ></superviz-comments-comment-item>\n    `;\n  };\n\n  private annotationResolvedTemplate() {\n    if (!this.shouldShowUndoResolved) return html``;\n\n    return html`\n      <superviz-comments-annotation-resolved\n        @undo-resolve=${this.resolveAnnotation}\n        @hide=${this.hideUndoResolved}\n        class=${classMap({\n          hidden: this.filterIsResolved,\n          'comments__resolved-annotation-message': true,\n        })}\n      >\n      </superviz-comments-annotation-resolved>\n    `;\n  }\n\n  private updateEditMode = ({ detail: { editing } }: CustomEvent) => {\n    this.hideInput = editing;\n  };\n\n  private get inputClasses() {\n    return {\n      'hide-input': this.hideInput,\n    };\n  }\n\n  private get wrapperClasses() {\n    return {\n      wrapper: true,\n      'show-wrapper':\n        (!this.resolved && this.filterIsAll) || (this.resolved && this.filterIsResolved),\n    };\n  }\n\n  protected render() {\n    const annotationItemClasses = {\n      'comments__complete-annotation': true,\n      'comments__hide-complete-annotation': this.shouldShowUndoResolved,\n    };\n\n    return html`\n      <div class=\"${classMap(annotationItemClasses)}\">\n        ${this.annotationResolvedTemplate()}\n\n        <div class=${classMap(this.wrapperClasses)}>\n          <div class=${classMap(this.shouldHideAnnotation)}>\n            <div class=${classMap(this.annotationClasses)} @click=${this.selectAnnotation}>\n              <div class=${classMap(this.mainAnnotationClasses)}>\n                <superviz-comments-comment-item\n                  uuid=${this.annotation.comments?.[0].uuid}\n                  annotationId=${this.annotation.uuid}\n                  username=${this.annotation.comments?.[0].participant?.name || 'Anonymous'}\n                  text=${this.annotation.comments?.[0].text}\n                  createdAt=${this.annotation.comments?.[0].createdAt}\n                  participantsList=${JSON.stringify(this.participantsList)}\n                  primaryComment\n                  avatar=${this.annotation?.comments?.at(0)?.participant?.avatar}\n                  resolvable\n                  ?resolved=${this.resolved}\n                  annotationFilter=${this.annotationFilter}\n                  @resolve-annotation=${this.resolveAnnotation}\n                  mentions=${JSON.stringify(this.annotation.comments?.[0].mentions)}\n                  class=\"comments__annotation\"\n                  @edit-comment=${this.updateEditMode}\n                ></superviz-comments-comment-item>\n              </div>\n\n              <div class=${classMap(this.containerWrapperClasses)}>\n                <div class=${classMap(this.commentsClasses)}>\n                  ${this.annotation.comments?.map(this.generateExpandedCommentsTemplate)}\n                  <span class=${classMap(this.inputClasses)}>\n                    <superviz-comments-comment-input\n                      @create-comment=${this.createComment}\n                      eventType=\"create-comment\"\n                      @click=${(event: Event) => event.stopPropagation()}\n                      placeholder=\"Reply\"\n                      participantsList=${JSON.stringify(this.participantsList)}\n                    ></superviz-comments-comment-input>\n                  </span>\n                </div>\n              </div>\n              <div class=${classMap(this.avatarCommentsClasses)}>\n                <div class=\"avatar-container\">${this.generateAvatarCommentsTemplate()}</div>\n              </div>\n            </div>\n            <div class=${classMap(this.hrClasses)}></div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n"],
  "mappings": "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",
  "names": ["init_define_process_env", "WebComponentsBaseElement", "WebComponentsBase", "s", "styles", "annotationItemStyle", "CommentsAnnotationItem", "event", "uuid", "detail", "resolved", "type", "isResolveAnnotation", "comment", "index", "_a", "_b", "_c", "_d", "x", "editing", "_changedProperties", "importStyle", "changedProperties", "isSelected", "text", "mentions", "_e", "_f", "avatarDivs", "e", "_g", "_h", "_i", "_j", "_k", "annotationItemClasses", "__decorateClass", "CreateElement"]
}
