{
  "version": 3,
  "sources": ["../../src/web-components/who-is-online/index.ts", "../../src/web-components/who-is-online/who-is-online.ts", "../../src/web-components/who-is-online/css/index.ts", "../../src/web-components/who-is-online/css/who-is-online-style.ts", "../../src/web-components/who-is-online/css/dropdown.style.ts", "../../src/web-components/who-is-online/css/messages.style.ts", "../../src/web-components/who-is-online/components/index.ts", "../../src/web-components/who-is-online/components/messages.ts", "../../src/web-components/who-is-online/components/types.ts", "../../src/web-components/who-is-online/components/dropdown.ts"],
  "sourcesContent": ["export { WhoIsOnline } from './who-is-online';\nexport * from './components';\n", "import { CSSResultGroup, LitElement, PropertyValueMap, html } from 'lit';\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport { RealtimeEvent } from '../../common/types/events.types';\nimport { StoreType } from '../../common/types/stores.types';\nimport {\n  Avatar,\n  WhoIsOnlineParticipant,\n  WIODropdownOptions,\n} from '../../components/who-is-online/types';\nimport { Following } from '../../services/stores/who-is-online/types';\nimport { WebComponentsBase } from '../base';\nimport importStyle from '../base/utils/importStyle';\n\nimport type { LocalParticipantData } from './components/types';\nimport { whoIsOnlineStyle } from './css/index';\nimport { CreateElement } from '../global/decorators/create-element.decorator';\n\nconst WebComponentsBaseElement = WebComponentsBase(LitElement);\nconst styles: CSSResultGroup[] = [WebComponentsBaseElement.styles, whoIsOnlineStyle];\n\n@CreateElement('superviz-who-is-online')\nexport class WhoIsOnline extends WebComponentsBaseElement {\n  static styles = styles;\n  declare position: string;\n  declare open: boolean;\n  declare isPrivate: boolean;\n  declare everyoneFollowsMe: boolean;\n  declare showTooltip: boolean;\n\n  private following: Following | undefined;\n  private localParticipantData: LocalParticipantData;\n  private amountOfExtras: number;\n  private disableDropdown: boolean;\n  private participants: WhoIsOnlineParticipant[];\n\n  static properties = {\n    position: { type: String },\n    open: { type: Boolean },\n    localParticipantColor: { type: String },\n    isPrivate: { type: Boolean },\n    everyoneFollowsMe: { type: Boolean },\n    showTooltip: { type: Boolean },\n  };\n\n  constructor() {\n    super();\n    this.position = 'top: 20px; right: 40px;';\n    this.showTooltip = true;\n    this.open = false;\n\n    const { localParticipant } = this.useStore(StoreType.GLOBAL);\n    const { participants, following, extras, disablePresenceControls } = this.useStore(\n      StoreType.WHO_IS_ONLINE,\n    );\n\n    participants.subscribe((participants) => {\n      this.participants = participants;\n    });\n    following.subscribe();\n    disablePresenceControls.subscribe();\n\n    extras.subscribe((participants) => {\n      this.amountOfExtras = participants.length;\n    });\n\n    localParticipant.subscribe((value) => {\n      const joinedPresence = value.activeComponents?.some((component) =>\n        component.toLowerCase().includes('presence'),\n      );\n\n      this.localParticipantData = {\n        id: value.id,\n        joinedPresence: value.activeComponents?.some((component) =>\n          component.toLowerCase().includes('presence'),\n        ),\n      };\n\n      this.disableDropdown = !joinedPresence;\n    });\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties);\n    importStyle.call(this, 'who-is-online');\n  }\n\n  private toggleOpen() {\n    this.open = !this.open;\n  }\n\n  private onClickOutDropdown = ({ detail }: CustomEvent) => {\n    this.open = detail.open;\n  };\n\n  private dropdownPosition(index: number) {\n    if (this.participants.length === 1) return 'bottom-center';\n\n    if (index === 0) return 'bottom-right';\n\n    const thereAreExtraParticipants = this.participants.length > 4;\n    const isTheLastParticipantOfList = index + 1 === this.participants.length;\n\n    if (thereAreExtraParticipants || !isTheLastParticipantOfList) {\n      return 'bottom-center';\n    }\n\n    return 'bottom-left';\n  }\n\n  private renderExtras() {\n    if (!this.amountOfExtras) return;\n\n    const classes = {\n      'who-is-online__participant': true,\n      excess_participants: true,\n      'excess_participants--open': this.open,\n    };\n\n    return html`\n      <superviz-who-is-online-dropdown\n        @selected=${this.dropdownOptionsHandler}\n        @clickout=${this.onClickOutDropdown}\n        ?disableDropdown=${this.disableDropdown}\n        ?showSeeMoreTooltip=${this.showTooltip}\n        @toggle=${this.toggleOpen}\n        @toggle-dropdown-state=${this.toggleShowTooltip}\n        ?localParticipantJoinedPresence=${this.localParticipantData?.joinedPresence}\n        classesPrefix=\"who-is-online__controls\"\n        parentComponent=\"who-is-online\"\n        tooltipPrefix=\"who-is-online\"\n      >\n        <div class=${classMap(classes)} slot=\"dropdown\">\n          <div class=\"superviz-who-is-online__excess who-is-online__extras\">\n            +${this.amountOfExtras}\n          </div>\n        </div>\n      </superviz-who-is-online-dropdown>\n    `;\n  }\n\n  private toggleShowTooltip = () => {\n    this.showTooltip = !this.showTooltip;\n  };\n\n  private getAvatar({ color, imageUrl, firstLetter, letterColor }: Avatar) {\n    if (imageUrl) {\n      return html` <img\n        class=\"who-is-online__participant__avatar\"\n        style=\"background-color: ${color}\"\n        src=${imageUrl}\n      />`;\n    }\n\n    return html`<div\n      class=\"who-is-online__participant__avatar\"\n      style=\"background-color: ${color}; color: ${letterColor}\"\n    >\n      ${firstLetter}\n    </div>`;\n  }\n\n  private cancelPrivate() {\n    this.isPrivate = undefined;\n    this.emitEvent(RealtimeEvent.REALTIME_PRIVATE_MODE, { id: this.localParticipantData.id });\n  }\n\n  private renderParticipants() {\n    if (!this.participants.length) return html``;\n\n    return html`\n      ${repeat(\n        this.participants,\n        (participant) => participant.id,\n        (participant, index) => {\n          const { avatar, id, name, tooltip, controls, disableDropdown, isLocalParticipant } =\n            participant;\n          const position = this.dropdownPosition(index);\n\n          const participantIsFollowed = this.following?.id === id;\n          const classList = {\n            'who-is-online__participant': true,\n            'disable-dropdown': disableDropdown,\n            followed: participantIsFollowed || (this.everyoneFollowsMe && isLocalParticipant),\n            private: isLocalParticipant && this.isPrivate,\n          };\n\n          return html`\n            <superviz-dropdown\n              options=${JSON.stringify(controls)}\n              returnData=${JSON.stringify({ participantId: id, source: 'participants' })}\n              position=${position}\n              name=${name}\n              tooltipData=${JSON.stringify(tooltip)}\n              classesPrefix=\"who-is-online__controls\"\n              parentComponent=\"who-is-online\"\n              tooltipPrefix=\"who-is-online\"\n              ?disabled=${disableDropdown}\n              ?canShowTooltip=${this.showTooltip}\n              @selected=${this.dropdownOptionsHandler}\n              @toggle-dropdown-state=${this.toggleShowTooltip}\n            >\n              <div\n                slot=\"dropdown\"\n                class=${classMap(classList)}\n                style=\"border-color: ${avatar.color}\"\n              >\n                ${this.getAvatar(avatar)}\n              </div>\n            </superviz-dropdown>\n          `;\n        },\n      )}\n    `;\n  }\n\n  // ----- handle presence controls options -----\n  private dropdownOptionsHandler = ({ detail: { label, participantId, source } }: CustomEvent) => {\n    switch (label) {\n      case WIODropdownOptions.GOTO:\n        this.handleGoTo(participantId);\n        break;\n      case WIODropdownOptions.LOCAL_FOLLOW:\n        this.handleLocalFollow(participantId, source);\n        break;\n      case WIODropdownOptions.LOCAL_UNFOLLOW:\n        this.handleLocalUnfollow();\n        break;\n      case WIODropdownOptions.PRIVATE:\n        this.handlePrivate(participantId);\n        break;\n      case WIODropdownOptions.LEAVE_PRIVATE:\n        this.handleCancelPrivate(participantId);\n        break;\n      case WIODropdownOptions.FOLLOW:\n        this.handleFollow(participantId, source);\n        break;\n      case WIODropdownOptions.UNFOLLOW:\n        this.handleStopFollow();\n        break;\n      case WIODropdownOptions.GATHER:\n        this.handleGatherAll(participantId);\n        break;\n      default:\n        break;\n    }\n  };\n\n  private handleGoTo(participantId: string) {\n    this.emitEvent(RealtimeEvent.REALTIME_GO_TO_PARTICIPANT, { id: participantId });\n  }\n\n  private handleLocalFollow(participantId: string, source: 'participants' | 'extras') {\n    const { following } = this.useStore(StoreType.WHO_IS_ONLINE);\n    const participants = this.useStore(StoreType.WHO_IS_ONLINE)[source].value;\n\n    const {\n      id,\n      name,\n      avatar: { color },\n    } = participants.find(({ id }) => id === participantId) as WhoIsOnlineParticipant;\n\n    if (this.everyoneFollowsMe) {\n      this.handleStopFollow();\n    }\n    following.publish({ name, id, color });\n    this.emitEvent(RealtimeEvent.REALTIME_LOCAL_FOLLOW_PARTICIPANT, { id, source });\n  }\n\n  private handleLocalUnfollow() {\n    const { following } = this.useStore(StoreType.WHO_IS_ONLINE);\n    following.publish(undefined);\n    this.emitEvent(RealtimeEvent.REALTIME_LOCAL_FOLLOW_PARTICIPANT, { id: undefined });\n  }\n\n  private handlePrivate(id: string) {\n    if (this.everyoneFollowsMe) {\n      this.handleStopFollow();\n    }\n\n    this.emitEvent(RealtimeEvent.REALTIME_PRIVATE_MODE, { id, isPrivate: true });\n    this.isPrivate = true;\n  }\n\n  private handleCancelPrivate(id: string) {\n    this.emitEvent(RealtimeEvent.REALTIME_PRIVATE_MODE, { id, isPrivate: false });\n    this.isPrivate = false;\n  }\n\n  private handleFollow(participantId: string, source: 'participants' | 'extras') {\n    if (this.isPrivate) {\n      this.cancelPrivate();\n    }\n\n    const participants = this.useStore(StoreType.WHO_IS_ONLINE)[source].value;\n\n    const {\n      id,\n      name,\n      avatar: { color },\n    } = participants.find(({ id }) => id === participantId);\n\n    this.everyoneFollowsMe = true;\n\n    const { following } = this.useStore(StoreType.WHO_IS_ONLINE);\n    following.publish(undefined);\n\n    this.emitEvent(RealtimeEvent.REALTIME_FOLLOW_PARTICIPANT, {\n      id,\n      name,\n      color,\n    });\n  }\n\n  private handleStopFollow() {\n    this.everyoneFollowsMe = false;\n    this.emitEvent(RealtimeEvent.REALTIME_FOLLOW_PARTICIPANT, undefined);\n  }\n\n  private handleGatherAll(id: string) {\n    if (this.isPrivate) {\n      this.cancelPrivate();\n    }\n\n    this.emitEvent(RealtimeEvent.REALTIME_GATHER, { id });\n  }\n\n  updated(changedProperties) {\n    super.updated(changedProperties);\n\n    this.updateComplete.then(() => {\n      const element = this.shadowRoot.querySelector('.who-is-online');\n      if (!element) return;\n\n      const side = this.position.includes('left') ? 'flex-start' : 'flex-end';\n      const style = `${this.position} align-items: ${side};`;\n      element.setAttribute('style', style);\n    });\n  }\n\n  protected render() {\n    return html`<div class=\"who-is-online who-is-online\">\n      <div class=\"who-is-online__participant-list\">\n        ${this.renderParticipants()} ${this.renderExtras()}\n      </div>\n      <superviz-who-is-online-messages\n        ?everyoneFollowsMe=${this.everyoneFollowsMe}\n        ?isPrivate=${this.isPrivate}\n        @stop-following=${this.handleLocalUnfollow}\n        @cancel-private=${this.cancelPrivate}\n        @stop-everyone-follows-me=${this.handleStopFollow}\n      ></superviz-who-is-online-messages>\n    </div> `;\n  }\n}\n", "export { whoIsOnlineStyle } from './who-is-online-style';\nexport { dropdownStyle } from './dropdown.style';\nexport { messagesStyle } from './messages.style';\n", "import { css } from 'lit';\n\nexport const whoIsOnlineStyle = css`\n  .who-is-online__participant-list {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    position: relative;\n  }\n\n  .who-is-online {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    z-index: 99;\n  }\n\n  .who-is-online__presence-control-message__text {\n    margin: 0;\n  }\n\n  .who-is-online__participant {\n    border-radius: 50%;\n    box-sizing: border-box;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    user-select: none;\n    cursor: pointer;\n    transition: opacity 0.3s ease-in-out;\n    border: 2px solid #878291;\n    border-radius: 50%;\n    max-width: 40px;\n    flex: 1 0 40px;\n  }\n\n  .followed {\n    border-style: dashed !important;\n    animation: rotate 15s linear infinite;\n  }\n\n  .followed .who-is-online__participant__avatar {\n    animation: nullifyRotate 15s linear infinite;\n  }\n\n  .private {\n    opacity: 0.3;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(1turn);\n    }\n  }\n\n  @keyframes nullifyRotate {\n    100% {\n      transform: rotate(-1turn);\n    }\n  }\n\n  .who-is-online__participant.disable-dropdown {\n    cursor: default;\n  }\n\n  .who-is-online__participant__avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: 'Open Sans';\n    font-size: 14px;\n    line-height: 14px;\n    line-height: 14px;\n    font-weight: bold;\n    color: #26242a;\n    object-fit: contain;\n  }\n\n  .superviz-who-is-online__excess {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: Roboto;\n    font-size: 14px;\n    line-height: 16px;\n    text-align: center;\n    font-weight: bold;\n    cursor: pointer;\n    color: #aea9b8;\n  }\n\n  .excess_participants:hover,\n  .excess_participants--open {\n    background-color: #aea9b8 !important;\n  }\n\n  .excess_participants:hover > div,\n  .excess_participants--open > div {\n    color: #fff !important;\n  }\n\n  @media (max-width: 780px) {\n    .who-is-online__participant {\n      width: 32px;\n      height: 32px;\n    }\n\n    .who-is-online__participant {\n      flex: 1 0 32px;\n      max-width: 32px;\n    }\n\n    .who-is-online__participant__avatar {\n      width: 24px;\n      height: 24px;\n    }\n\n    .who-is-online__participant-list {\n      gap: 8px;\n    }\n\n    .superviz-who-is-online__excess {\n      width: 24px;\n      height: 24px;\n      font-size: 12px;\n      line-height: 12px;\n    }\n  }\n`;\n", "import { css } from 'lit';\n\nexport const dropdownStyle = css`\n  .dropdown {\n    position: relative;\n  }\n\n  .who-is-online__extra-participant {\n    display: flex;\n    user-select: none;\n    align-items: center;\n    justify-items: start;\n    gap: 4px;\n    width: 100%;\n    padding: 10px;\n    border-radius: 2px;\n    position: relative;\n    cursor: pointer;\n  }\n\n  .who-is-online__extra-participant.disable-dropdown {\n    cursor: default;\n  }\n\n  .who-is-online__extra-participant:hover,\n  .who-is-online__extra-participant--selected {\n    background-color: rgb(var(--sv-gray-200));\n  }\n\n  .who-is-online__participant {\n    border-radius: 50%;\n    box-sizing: border-box;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    border: 2px solid #878291;\n    border-radius: 50%;\n    max-width: 40px;\n    flex: 1 0 40px;\n  }\n\n  .who-is-online__participant__avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: 'Open Sans';\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: bold;\n    color: #26242a;\n    object-fit: contain;\n  }\n\n  .dropdown-list {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    z-index: 100;\n  }\n\n  .dropdown-list > div {\n    padding: 4px;\n    width: 216px;\n    box-sizing: border-box;\n  }\n\n  .who-is-online__extras-dropdown {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    opacity: 0;\n    display: none;\n    background: #fff;\n    padding: 0;\n    z-index: 1;\n    transition: 0.2s;\n    border-radius: 3px;\n    max-height: 240px;\n    overflow: auto;\n  }\n\n  .who-is-online__extras-dropdown superviz-dropdown:hover {\n    z-index: 999;\n    position: relative;\n  }\n\n  .who-is-online__extras__arrow-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .menu--bottom {\n    top: 4px;\n    min-width: 103px;\n    position: absolute;\n    right: 0;\n  }\n\n  .menu--top {\n    bottom: 44px;\n    min-width: 103px;\n    position: absolute;\n    right: 0px;\n  }\n\n  .menu-open {\n    display: block;\n    opacity: 1;\n  }\n\n  .superviz-who-is-online-dropdown__tooltip {\n    background-color: rgb(var(--sv-gray-600));\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    align-items: center;\n    position: absolute;\n    top: 52px;\n    left: 50%;\n    transform: translateX(-50%);\n    border-radius: 2px;\n    opacity: 0;\n    cursor: default;\n    display: none;\n    transition: opacity 0.2s ease-in-out display 0s;\n  }\n\n  .superviz-who-is-online-dropdown__tooltip-arrow {\n    width: 13px;\n    height: 13px;\n    position: absolute;\n    top: 0px;\n    left: 50%;\n    transform: rotate(45deg) translateX(-50%);\n    background-color: rgb(var(--sv-gray-600));\n    border-top-left-radius: 3px;\n  }\n\n  .dropdown-content:hover + .superviz-who-is-online-dropdown__tooltip {\n    opacity: 1;\n    display: block;\n  }\n\n  .tooltip-content {\n    margin: 0;\n    font-family: roboto;\n    white-space: nowrap;\n    text-align: center;\n    color: white;\n    font-size: 14px;\n  }\n\n  .who-is-online__extras__username {\n    font-size: 14px;\n    line-height: 20px;\n    font-family: 'Open sans';\n    color: rgb(var(--sv-gray-600));\n  }\n\n  .icon {\n    flex: 1;\n    justify-content: flex-end;\n    display: flex;\n  }\n\n  .hide-icon {\n    display: none;\n  }\n\n  @media (max-width: 780px) {\n    .sv-icon,\n    .who-is-online__participant {\n      width: 32px;\n      height: 32px;\n    }\n\n    .who-is-online__participant {\n      flex: 1 0 32px;\n      max-width: 32px;\n    }\n\n    .who-is-online__participant__avatar {\n      width: 24px;\n      height: 24px;\n    }\n\n    .dropdown-list > div {\n      width: 192px;\n    }\n\n    .menu--top {\n      bottom: 36px;\n    }\n\n    .superviz-who-is-online-dropdown__tooltip {\n      top: 44px;\n    }\n  }\n`;\n", "import { css } from 'lit';\n\nexport const messagesStyle = css`\n  .who-is-online__controls-messages {\n    position: absolute;\n    right: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 4px;\n  }\n\n  .who-is-online__presence-control-message {\n    box-sizing: border-box;\n    font-size: 12px;\n    padding: 8px 10px;\n    font-family: 'Roboto';\n    border-radius: 6px;\n    background-color: #fff;\n    color: rgb(var(--sv-gray-700));\n    border: 2px solid #e0e0e0;\n    white-space: nowrap;\n  }\n\n  .who-is-online__pcm__text {\n    margin: 0;\n  }\n\n  .who-is-online__presence-control-message span {\n    margin-left: 3px;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  .left-side {\n    left: 0;\n  }\n\n  .right-side {\n    right: 0;\n  }\n\n  .left-side .who-is-online__presence-control-message {\n    align-self: flex-start;\n  }\n\n  .right-side .who-is-online__presence-control-message {\n    align-self: flex-end;\n  }\n\n  .bottom-side {\n    bottom: auto;\n    top: calc(100% + 5px);\n  }\n\n  .top-side {\n    top: auto;\n    bottom: calc(100% + 5px);\n  }\n`;\n", "export { WhoIsOnlineMessages } from './messages';\nexport { WhoIsOnlineDropdown } from './dropdown';\n", "import { CSSResultGroup, LitElement, PropertyDeclaration, PropertyValueMap, html } from 'lit';\n\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { Participant } from '../../../common/types/participant.types';\nimport { StoreType } from '../../../common/types/stores.types';\nimport { Following } from '../../../services/stores/who-is-online/types';\nimport { WebComponentsBase } from '../../base';\nimport importStyle from '../../base/utils/importStyle';\nimport { messagesStyle } from '../css';\n\nimport { HorizontalSide, VerticalSide } from './types';\nimport { MEETING_COLORS } from '../../../common/types/meeting-colors.types';\nimport { CreateElement } from '../../global/decorators/create-element.decorator';\n\nconst WebComponentsBaseElement = WebComponentsBase(LitElement);\nconst styles: CSSResultGroup[] = [WebComponentsBaseElement.styles, messagesStyle];\n\n@CreateElement('superviz-who-is-online-messages')\nexport class WhoIsOnlineMessages extends WebComponentsBaseElement {\n  static styles = styles;\n\n  declare everyoneFollowsMe: boolean;\n  declare isPrivate: boolean;\n  declare verticalSide: VerticalSide;\n  declare horizontalSide: HorizontalSide;\n\n  private following: Following | undefined;\n  private participantColor: string;\n  private animationFrame: number | undefined;\n\n  static properties = {\n    everyoneFollowsMe: { type: Boolean },\n    isPrivate: { type: Boolean },\n    verticalSide: { type: String },\n    horizontalSide: { type: String },\n  };\n\n  constructor() {\n    super();\n    const { localParticipant } = this.useStore(StoreType.GLOBAL);\n    localParticipant.subscribe((participant: Participant) => {\n      this.participantColor = participant.slot?.color ?? MEETING_COLORS.gray;\n    });\n\n    const { following } = this.useStore(StoreType.WHO_IS_ONLINE);\n    following.subscribe();\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    super.firstUpdated(_changedProperties);\n    importStyle.call(this, 'who-is-online');\n  }\n\n  protected updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    super.updated(_changedProperties);\n    const _ = ['following', 'everyoneFollowsMe', 'isPrivate'];\n\n    if (_.some((property) => _changedProperties.has(property))) {\n      this.repositionMessages();\n    }\n  }\n\n  // Logic to reposition the messages if there is not enough freespace\n  /**\n   * @function repositionMessages\n   * @description Reposition the messages container based on which side there's more free space\n   * @returns {void}\n   */\n  private repositionMessages = () => {\n    const { following, everyoneFollowsMe, isPrivate } = this;\n\n    if (following || everyoneFollowsMe || isPrivate) {\n      this.repositionInVerticalDirection();\n      this.repositionInHorizontalDirection();\n\n      this.animationFrame = window.requestAnimationFrame(this.repositionMessages);\n      return;\n    }\n\n    window.cancelAnimationFrame(this.animationFrame);\n  };\n\n  /**\n   * @function repositionInVerticalDirection\n   * @description Reposition the messages container based on the vertical side with more free space\n   * @returns {void}\n   */\n  private repositionInVerticalDirection() {\n    const verticalMidpoint = window.innerHeight / 2;\n    const { top } = this.parentElement.getBoundingClientRect();\n\n    if (top < verticalMidpoint) {\n      this.verticalSide = VerticalSide.BOTTOM;\n      return;\n    }\n\n    this.verticalSide = VerticalSide.TOP;\n  }\n\n  /**\n   * @function repositionInHorizontalDirection\n   * @description Reposition the messages container based on the horizontal side with more free space\n   * @returns {void\n   * }\n   */\n  private repositionInHorizontalDirection() {\n    const horizontalMidpoint = window.innerWidth / 2;\n    const { left } = this.parentElement.getBoundingClientRect();\n\n    if (left < horizontalMidpoint) {\n      this.horizontalSide = HorizontalSide.LEFT;\n      return;\n    }\n\n    this.horizontalSide = HorizontalSide.RIGHT;\n  }\n\n  // Callbacks\n  /**\n   * @function stopFollowing\n   * @description Emits an event to stop following a participant\n   * @returns {void}\n   */\n  private stopFollowing() {\n    this.emitEvent('stop-following', {});\n  }\n\n  /**\n   * @function cancelPrivate\n   * @description Emits an event to cancel private mode\n   * @returns {void}\n   */\n  private cancelPrivate() {\n    this.emitEvent('cancel-private', {});\n  }\n\n  /**\n   * @function stopEveryoneFollowsMe\n   * @description Emits an event to cancel the Everyone Follows Me mode (does not prevent participants from following the user individually)\n   * @returns {void}\n   */\n  private stopEveryoneFollowsMe() {\n    this.emitEvent('stop-everyone-follows-me', {});\n  }\n\n  // Content to be rendered\n\n  // Regarding the classes of all \"*Message()\" methods:\n  // The classes are used to style the messages, and they should be replicated for consistency should\n  // new messages/interactions be added\n  // The exception is 1 class unique to each message, so the user can target this message in particular\n  private followingMessage() {\n    if (!this.following) return '';\n\n    const { name, color } = this.following;\n\n    return html`<div\n      class=\"who-is-online__following-message who-is-online__presence-control-message who-is-online__pcm\"\n      style=\"border-color: ${color}\"\n    >\n      <p class=\"who-is-online__presence-control-message__text who-is-online__pcm__text\">\n        Following: ${name}\n        <span\n          class=\"who-is-online__presence-control-message__cancel-action-button who-is-online__pcm__cancel-action-button\"\n          @click=${this.stopFollowing}\n          >Stop</span\n        >\n      </p>\n    </div>`;\n  }\n\n  private everyoneFollowsMeMessage() {\n    if (!this.everyoneFollowsMe) return '';\n\n    return html`<div\n      class=\"who-is-online__follow-me-message who-is-online__presence-control-message who-is-online__pcm\"\n      style=\"border-color: ${this.participantColor}\"\n    >\n      <p class=\"who-is-online__presence-control-message__text who-is-online__pcm__text\">\n        Everyone is following you\n        <span\n          class=\"who-is-online__presence-control-message__cancel-action-button who-is-online__pcm__cancel-action-button\"\n          @click=${this.stopEveryoneFollowsMe}\n          >Stop</span\n        >\n      </p>\n    </div>`;\n  }\n\n  private privateMessage() {\n    if (!this.isPrivate) return '';\n\n    return html`<div\n      class=\"who-is-online__private-mode-message who-is-online__presence-control-message who-is-online__pcm\"\n      style=\"border-color: ${this.participantColor}\"\n    >\n      <p class=\"who-is-online__presence-control-message__text who-is-online__pcm__text\">\n        You are in Private Mode\n        <span\n          class=\"who-is-online__presence-control-message__cancel-action-button who-is-online__pcm__cancel-action-button\"\n          @click=${this.cancelPrivate}\n          >Cancel</span\n        >\n      </p>\n    </div>`;\n  }\n\n  protected render() {\n    const classList = {\n      'who-is-online__controls-messages': true,\n      [this.verticalSide]: true,\n      [this.horizontalSide]: true,\n    };\n\n    return html` <div class=${classMap(classList)}>\n      ${this.followingMessage()} ${this.everyoneFollowsMeMessage()} ${this.privateMessage()}\n    </div>`;\n  }\n}\n", "export interface Options {\n  label: string;\n  id: string;\n  name: string;\n  color: string;\n  slotIndex: number;\n}\n\nexport interface LocalParticipantData {\n  id: string;\n  joinedPresence: boolean;\n}\n\nexport enum VerticalSide {\n  TOP = 'top-side',\n  BOTTOM = 'bottom-side',\n}\n\nexport enum HorizontalSide {\n  LEFT = 'left-side',\n  RIGHT = 'right-side',\n}\n", "// @ts-nocheck\nimport { CSSResultGroup, LitElement, PropertyValueMap, html } from 'lit';\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport { StoreType } from '../../../common/types/stores.types';\nimport { Avatar, Participant } from '../../../components/who-is-online/types';\nimport { WebComponentsBase } from '../../base';\nimport importStyle from '../../base/utils/importStyle';\nimport { dropdownStyle } from '../css';\n\nimport { Following, VerticalSide, HorizontalSide } from './types';\nimport { CreateElement } from '../../global/decorators/create-element.decorator';\n\nconst WebComponentsBaseElement = WebComponentsBase(LitElement);\nconst styles: CSSResultGroup[] = [WebComponentsBaseElement.styles, dropdownStyle];\n\n@CreateElement('superviz-who-is-online-dropdown')\nexport class WhoIsOnlineDropdown extends WebComponentsBaseElement {\n  static styles = styles;\n\n  declare open: boolean;\n  declare align: HorizontalSide;\n  declare position: VerticalSide;\n  declare selected: string;\n  declare disableDropdown: boolean;\n  declare showSeeMoreTooltip: boolean;\n  declare showParticipantTooltip: boolean;\n  declare localParticipantJoinedPresence: boolean;\n  declare dropdownList: HTMLElement;\n\n  private participants: Participant[];\n  private animationFrame: number;\n\n  static properties = {\n    open: { type: Boolean },\n    align: { type: String },\n    position: { type: String },\n    selected: { type: String },\n    disableDropdown: { type: Boolean },\n    showSeeMoreTooltip: { type: Boolean },\n    showParticipantTooltip: { type: Boolean },\n    localParticipantJoinedPresence: { type: Boolean },\n    dropdownList: { type: Object },\n  };\n\n  constructor() {\n    super();\n    this.selected = '';\n    this.showParticipantTooltip = true;\n\n    const { extras } = this.useStore(StoreType.WHO_IS_ONLINE);\n    extras.subscribe((participants) => {\n      this.participants = participants;\n    });\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    this.shadowRoot.querySelector('.who-is-online__extras-dropdown').scrollTop = 0;\n    importStyle.call(this, 'who-is-online');\n\n    this.dropdownList = this.shadowRoot.querySelector('.dropdown-list') as HTMLElement;\n    this.dropdownList.style.position = 'fixed';\n  }\n\n  protected updated(changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    if (!changedProperties.has('open')) return;\n\n    this.emitEvent('toggle-dropdown-state', { open: this.open, font: 'toggle' });\n\n    if (this.open) {\n      document.addEventListener('click', this.onClickOutDropdown);\n      return;\n    }\n\n    document.removeEventListener('click', this.onClickOutDropdown);\n  }\n\n  private onClickOutDropdown = (event: Event) => {\n    event.stopPropagation();\n\n    if (!this.open) return;\n\n    const elements = event.composedPath();\n    const dropdownContent = this.shadowRoot.querySelector('.dropdown-content');\n    const dropdownList = this.shadowRoot.querySelector('.dropdown-list');\n    const slotDropdown = this.shadowRoot.querySelector('slot[name=\"dropdown\"]') as HTMLSlotElement;\n    const dropdownCta = slotDropdown.assignedElements()[0];\n    const hasDropdownContent = elements.includes(dropdownContent);\n    const hasDropdownList = elements.includes(dropdownList);\n    const hasDropdownCta = elements.includes(dropdownCta);\n\n    if (!(hasDropdownContent || hasDropdownList || hasDropdownCta)) {\n      this.close();\n    }\n  };\n\n  private close = () => {\n    this.open = false;\n    this.selected = '';\n    this.emitEvent('clickout', {\n      bubbles: false,\n      composed: false,\n    });\n  };\n\n  private selectParticipant = (participantId: string, disableDropdown: boolean) => {\n    return () => {\n      if (disableDropdown) return;\n\n      this.selected = participantId;\n    };\n  };\n\n  private getAvatar({ color, imageUrl, firstLetter, letterColor }: Avatar) {\n    if (imageUrl) {\n      return html` <img\n        class=\"who-is-online__participant__avatar\"\n        style=\"background-color: ${color}\"\n        src=${imageUrl}\n      />`;\n    }\n\n    return html`<div\n      class=\"who-is-online__participant__avatar\"\n      style=\"background-color: ${color}; color: ${letterColor}\"\n    >\n      ${firstLetter}\n    </div>`;\n  }\n\n  private toggleShowTooltip = ({ detail: { open } }: CustomEvent) => {\n    this.showParticipantTooltip = !this.showParticipantTooltip;\n\n    if (!open) {\n      this.selected = '';\n    }\n  };\n\n  private renderParticipants() {\n    if (!this.participants) return;\n\n    const numberOfParticipants = this.participants.length - 1;\n\n    return repeat(\n      this.participants,\n      (participant) => participant.id,\n      (participant, index) => {\n        const { disableDropdown, id, avatar, controls, tooltip, name } = participant;\n\n        const contentClasses = {\n          'who-is-online__extra-participant': true,\n          'who-is-online__extra-participant--selected': this.selected === id,\n          'disable-dropdown': disableDropdown,\n        };\n\n        const iconClasses = {\n          'who-is-online__extras__arrow-icon': true,\n          'hide-icon': disableDropdown,\n        };\n\n        const isLastParticipant = index === numberOfParticipants;\n\n        return html`\n        <superviz-dropdown\n          options=${JSON.stringify(controls)}\n          returnData=${JSON.stringify({ participantId: id, source: 'extras' })}\n          tooltipData=${JSON.stringify(tooltip)}\n          position=\"bottom-right\"\n          classesPrefix=\"who-is-online__controls\"\n          parentComponent=\"who-is-online\"\n          tooltipPrefix=\"who-is-online\"\n          ?disabled=${disableDropdown}\n          ?canShowTooltip=${this.showParticipantTooltip}\n          ?shiftTooltipLeft=${true}\n          ?lastParticipant=${isLastParticipant}\n          @toggle-dropdown-state=${this.toggleShowTooltip}\n          @selected=${this.close}\n        >\n        <div \n          class=${classMap(contentClasses)} \n          @click=${this.selectParticipant(id, disableDropdown)} slot=\"dropdown\">\n            <div class=\"who-is-online__participant\" style=\"border-color: \n            ${avatar.color}\">\n              ${this.getAvatar(avatar)}\n            </div>\n            <span class=\"who-is-online__extras__username\">${name}</span>\n            <superviz-icon \n              class=${classMap(iconClasses)} \n              name=\"right\" \n              color=\"var(--sv-gray-600)\"\n              size=\"sm\"\n            >\n          </superviz-icon>\n          </div>\n        </div>\n      </superviz-dropdown>\n      `;\n      },\n    );\n  }\n\n  private toggle() {\n    this.open = !this.open;\n\n    if (!this.open) return;\n    this.selected = '';\n    this.repositionDropdown();\n  }\n\n  private get menuClasses() {\n    return {\n      'who-is-online__extras-dropdown': true,\n      'menu--bottom': this.position === VerticalSide.BOTTOM,\n      'menu--top': this.position === VerticalSide.TOP,\n      'menu-open': this.open,\n    };\n  }\n\n  private tooltip = () => {\n    if (!this.showSeeMoreTooltip) return '';\n\n    return html`<superviz-tooltip\n      tooltipData=${JSON.stringify({ name: 'See more' })}\n      classesPrefix=\"who-is-online__tooltip\"\n      parentComponent=\"who-is-online\"\n    ></superviz-tooltip>`;\n  };\n\n  private repositionDropdown = () => {\n    if (!this.open || !this.parentElement) {\n      window.cancelAnimationFrame(this.animationFrame);\n      return;\n    }\n\n    this.repositionInVerticalDirection();\n    this.repositionInHorizontalDirection();\n\n    this.animationFrame = window.requestAnimationFrame(this.repositionDropdown);\n  };\n\n  private repositionInVerticalDirection = () => {\n    const { bottom, top, height } = this.parentElement.getBoundingClientRect();\n    const windowVerticalMidpoint = window.innerHeight / 2;\n    const dropdownVerticalMidpoint = top + height / 2;\n\n    if (dropdownVerticalMidpoint > windowVerticalMidpoint) {\n      this.dropdownList.style.setProperty('bottom', `${window.innerHeight - top + 8}px`);\n      this.dropdownList.style.setProperty('top', '');\n      return;\n    }\n\n    this.dropdownList.style.setProperty('top', `${bottom + 8}px`);\n    this.dropdownList.style.setProperty('bottom', '');\n  };\n\n  private repositionInHorizontalDirection = () => {\n    const { right, left } = this.parentElement.getBoundingClientRect();\n    this.dropdownList.style.setProperty('right', `${window.innerWidth - right}px`);\n    this.dropdownList.style.setProperty('left', `${left}px`);\n  };\n\n  protected render() {\n    return html`\n      <div class=\"dropdown\">\n        <div class=\"dropdown-content\" @click=${this.toggle}>\n          <slot name=\"dropdown\"></slot>\n        </div>\n        ${this.tooltip()}\n      </div>\n      <div class=\"dropdown-list\">\n        <div class=${classMap(this.menuClasses)}>${this.renderParticipants()}</div>\n      </div>\n    `;\n  }\n}\n"],
  "mappings": "4WAAAA,ICAAC,ICAAC,ICAAC,IAEO,IAAMC,EAAmhCC,IAEO,IAAMC,EAAggBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EJkB7B,IAAMC,EAA2BC,EAAkBC,CAAU,EACvDC,EAA2B,CAACH,EAAyB,OAAQI,CAAgB,EAGtEC,EAAN,cAA0BL,CAAyB,CAuBxD,aAAc,CACZ,MAAM,EA+CR,KAAQ,mBAAqB,CAAC,CAAE,OAAAM,CAAO,IAAmB,CACxD,KAAK,KAAOA,EAAO,IACrB,EAgDA,KAAQ,kBAAoB,IAAM,CAChC,KAAK,YAAc,CAAC,KAAK,WAC3B,EA0EA,KAAQ,uBAAyB,CAAC,CAAE,OAAQ,CAAE,MAAAC,EAAO,cAAAC,EAAe,OAAAC,CAAO,CAAE,IAAmB,CAC9F,OAAQF,EAAO,CACb,YACE,KAAK,WAAWC,CAAa,EAC7B,MACF,aACE,KAAK,kBAAkBA,EAAeC,CAAM,EAC5C,MACF,eACE,KAAK,oBAAoB,EACzB,MACF,mBACE,KAAK,cAAcD,CAAa,EAChC,MACF,yBACE,KAAK,oBAAoBA,CAAa,EACtC,MACF,0BACE,KAAK,aAAaA,EAAeC,CAAM,EACvC,MACF,qBACE,KAAK,iBAAiB,EACtB,MACF,iBACE,KAAK,gBAAgBD,CAAa,EAClC,MACF,QACE,KACJ,CACF,EAzME,KAAK,SAAW,0BAChB,KAAK,YAAc,GACnB,KAAK,KAAO,GAEZ,GAAM,CAAE,iBAAAE,CAAiB,EAAI,KAAK,uBAAyB,EACrD,CAAE,aAAAC,EAAc,UAAAC,EAAW,OAAAC,EAAQ,wBAAAC,CAAwB,EAAI,KAAK,8BAE1E,EAEAH,EAAa,UAAWA,GAAiB,CACvC,KAAK,aAAeA,CACtB,CAAC,EACDC,EAAU,UAAU,EACpBE,EAAwB,UAAU,EAElCD,EAAO,UAAWF,GAAiB,CACjC,KAAK,eAAiBA,EAAa,MACrC,CAAC,EAEDD,EAAiB,UAAWK,GAAU,CApE1C,IAAAC,EAAAC,EAqEM,IAAMC,GAAiBF,EAAAD,EAAM,mBAAN,YAAAC,EAAwB,KAAMG,GACnDA,EAAU,YAAY,EAAE,SAAS,UAAU,GAG7C,KAAK,qBAAuB,CAC1B,GAAIJ,EAAM,GACV,gBAAgBE,EAAAF,EAAM,mBAAN,YAAAE,EAAwB,KAAME,GAC5CA,EAAU,YAAY,EAAE,SAAS,UAAU,EAE/C,EAEA,KAAK,gBAAkB,CAACD,CAC1B,CAAC,CACH,CAEU,aACRE,EACM,CACN,MAAM,aAAaA,CAAkB,EACrCC,EAAY,KAAK,KAAM,eAAe,CACxC,CAEQ,YAAa,CACnB,KAAK,KAAO,CAAC,KAAK,IACpB,CAMQ,iBAAiBC,EAAe,CACtC,GAAI,KAAK,aAAa,SAAW,EAAG,MAAO,gBAE3C,GAAIA,IAAU,EAAG,MAAO,eAExB,IAAMC,EAA4B,KAAK,aAAa,OAAS,EACvDC,EAA6BF,EAAQ,IAAM,KAAK,aAAa,OAEnE,OAAIC,GAA6B,CAACC,EACzB,gBAGF,aACT,CAEQ,cAAe,CAlHzB,IAAAR,EAmHI,GAAI,CAAC,KAAK,eAAgB,OAE1B,IAAMS,EAAU,CACd,6BAA8B,GAC9B,oBAAqB,GACrB,4BAA6B,KAAK,IACpC,EAEA,OAAOC;AAAA;AAAA,oBAES,KAAK,sBAAsB;AAAA,oBAC3B,KAAK,kBAAkB;AAAA,2BAChB,KAAK,eAAe;AAAA,8BACjB,KAAK,WAAW;AAAA,kBAC5B,KAAK,UAAU;AAAA,iCACA,KAAK,iBAAiB;AAAA,2CACbV,EAAA,KAAK,uBAAL,YAAAA,EAA2B,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,qBAK9DW,EAASF,CAAO,CAAC;AAAA;AAAA,eAEvB,KAAK,cAAc;AAAA;AAAA;AAAA;AAAA,KAKhC,CAMQ,UAAU,CAAE,MAAAG,EAAO,SAAAC,EAAU,YAAAC,EAAa,YAAAC,CAAY,EAAW,CACvE,OAAIF,EACKH;AAAA;AAAA,mCAEsBE,CAAK;AAAA,cAC1BC,CAAQ;AAAA,UAIXH;AAAA;AAAA,iCAEsBE,CAAK,YAAYG,CAAW;AAAA;AAAA,QAErDD,CAAW;AAAA,WAEjB,CAEQ,eAAgB,CACtB,KAAK,UAAY,OACjB,KAAK,kCAA+C,CAAE,GAAI,KAAK,qBAAqB,EAAG,CAAC,CAC1F,CAEQ,oBAAqB,CAC3B,OAAK,KAAK,aAAa,OAEhBJ;AAAA,QACHM,EACA,KAAK,aACJC,GAAgBA,EAAY,GAC7B,CAACA,EAAaX,IAAU,CAlLhC,IAAAN,EAmLU,GAAM,CAAE,OAAAkB,EAAQ,GAAAC,EAAI,KAAAC,EAAM,QAAAC,EAAS,SAAAC,EAAU,gBAAAC,EAAiB,mBAAAC,CAAmB,EAC/EP,EACIQ,EAAW,KAAK,iBAAiBnB,CAAK,EAEtCoB,IAAwB1B,EAAA,KAAK,YAAL,YAAAA,EAAgB,MAAOmB,EAC/CQ,EAAY,CAChB,6BAA8B,GAC9B,mBAAoBJ,EACpB,SAAUG,GAA0B,KAAK,mBAAqBF,EAC9D,QAASA,GAAsB,KAAK,SACtC,EAEA,OAAOd;AAAA;AAAA,wBAEO,KAAK,UAAUY,CAAQ,CAAC;AAAA,2BACrB,KAAK,UAAU,CAAE,cAAeH,EAAI,OAAQ,cAAe,CAAC,CAAC;AAAA,yBAC/DM,CAAQ;AAAA,qBACZL,CAAI;AAAA,4BACG,KAAK,UAAUC,CAAO,CAAC;AAAA;AAAA;AAAA;AAAA,0BAIzBE,CAAe;AAAA,gCACT,KAAK,WAAW;AAAA,0BACtB,KAAK,sBAAsB;AAAA,uCACd,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA,wBAIrCZ,EAASgB,CAAS,CAAC;AAAA,uCACJT,EAAO,KAAK;AAAA;AAAA,kBAEjC,KAAK,UAAUA,CAAM,CAAC;AAAA;AAAA;AAAA,WAIhC,CACF,CAAC;AAAA,MA5CmCR,GA8CxC,CAkCQ,WAAWlB,EAAuB,CACxC,KAAK,uCAAoD,CAAE,GAAIA,CAAc,CAAC,CAChF,CAEQ,kBAAkBA,EAAuBC,EAAmC,CAClF,GAAM,CAAE,UAAAG,CAAU,EAAI,KAAK,8BAAgC,EACrDD,EAAe,KAAK,8BAAgC,EAAEF,CAAM,EAAE,MAE9D,CACJ,GAAA0B,EACA,KAAAC,EACA,OAAQ,CAAE,MAAAR,CAAM,CAClB,EAAIjB,EAAa,KAAK,CAAC,CAAE,GAAAwB,CAAG,IAAMA,IAAO3B,CAAa,EAElD,KAAK,mBACP,KAAK,iBAAiB,EAExBI,EAAU,QAAQ,CAAE,KAAAwB,EAAM,GAAAD,EAAI,MAAAP,CAAM,CAAC,EACrC,KAAK,8CAA2D,CAAE,GAAAO,EAAI,OAAA1B,CAAO,CAAC,CAChF,CAEQ,qBAAsB,CAC5B,GAAM,CAAE,UAAAG,CAAU,EAAI,KAAK,8BAAgC,EAC3DA,EAAU,QAAQ,MAAS,EAC3B,KAAK,8CAA2D,CAAE,GAAI,MAAU,CAAC,CACnF,CAEQ,cAAcuB,EAAY,CAC5B,KAAK,mBACP,KAAK,iBAAiB,EAGxB,KAAK,kCAA+C,CAAE,GAAAA,EAAI,UAAW,EAAK,CAAC,EAC3E,KAAK,UAAY,EACnB,CAEQ,oBAAoBA,EAAY,CACtC,KAAK,kCAA+C,CAAE,GAAAA,EAAI,UAAW,EAAM,CAAC,EAC5E,KAAK,UAAY,EACnB,CAEQ,aAAa3B,EAAuBC,EAAmC,CACzE,KAAK,WACP,KAAK,cAAc,EAGrB,IAAME,EAAe,KAAK,8BAAgC,EAAEF,CAAM,EAAE,MAE9D,CACJ,GAAA0B,EACA,KAAAC,EACA,OAAQ,CAAE,MAAAR,CAAM,CAClB,EAAIjB,EAAa,KAAK,CAAC,CAAE,GAAAwB,CAAG,IAAMA,IAAO3B,CAAa,EAEtD,KAAK,kBAAoB,GAEzB,GAAM,CAAE,UAAAI,CAAU,EAAI,KAAK,8BAAgC,EAC3DA,EAAU,QAAQ,MAAS,EAE3B,KAAK,wCAAqD,CACxD,GAAAuB,EACA,KAAAC,EACA,MAAAR,CACF,CAAC,CACH,CAEQ,kBAAmB,CACzB,KAAK,kBAAoB,GACzB,KAAK,wCAAqD,MAAS,CACrE,CAEQ,gBAAgBO,EAAY,CAC9B,KAAK,WACP,KAAK,cAAc,EAGrB,KAAK,4BAAyC,CAAE,GAAAA,CAAG,CAAC,CACtD,CAEA,QAAQS,EAAmB,CACzB,MAAM,QAAQA,CAAiB,EAE/B,KAAK,eAAe,KAAK,IAAM,CAC7B,IAAMC,EAAU,KAAK,WAAW,cAAc,gBAAgB,EAC9D,GAAI,CAACA,EAAS,OAEd,IAAMC,EAAO,KAAK,SAAS,SAAS,MAAM,EAAI,aAAe,WACvDC,EAAQ,GAAG,KAAK,QAAQ,iBAAiBD,CAAI,IACnDD,EAAQ,aAAa,QAASE,CAAK,CACrC,CAAC,CACH,CAEU,QAAS,CACjB,OAAOrB;AAAA;AAAA,UAED,KAAK,mBAAmB,CAAC,IAAI,KAAK,aAAa,CAAC;AAAA;AAAA;AAAA,6BAG7B,KAAK,iBAAiB;AAAA,qBAC9B,KAAK,SAAS;AAAA,0BACT,KAAK,mBAAmB;AAAA,0BACxB,KAAK,aAAa;AAAA,oCACR,KAAK,gBAAgB;AAAA;AAAA,YAGvD,CACF,EA9UarB,EACJ,OAASF,EADLE,EAcJ,WAAa,CAClB,SAAU,CAAE,KAAM,MAAO,EACzB,KAAM,CAAE,KAAM,OAAQ,EACtB,sBAAuB,CAAE,KAAM,MAAO,EACtC,UAAW,CAAE,KAAM,OAAQ,EAC3B,kBAAmB,CAAE,KAAM,OAAQ,EACnC,YAAa,CAAE,KAAM,OAAQ,CAC/B,EArBWA,EAAN2C,EAAA,CADNC,EAAc,wBAAwB,GAC1B5C,GKxBb6C,ICAAC,ICAAC,IDeA,IAAMC,EAA2BC,EAAkBC,CAAU,EACvDC,EAA2B,CAACH,EAAyB,OAAQI,CAAa,EAGnEC,EAAN,cAAkCL,CAAyB,CAmBhE,aAAc,CACZ,MAAM,EAgCR,KAAQ,mBAAqB,IAAM,CACjC,GAAM,CAAE,UAAAM,EAAW,kBAAAC,EAAmB,UAAAC,CAAU,EAAI,KAEpD,GAAIF,GAAaC,GAAqBC,EAAW,CAC/C,KAAK,8BAA8B,EACnC,KAAK,gCAAgC,EAErC,KAAK,eAAiB,OAAO,sBAAsB,KAAK,kBAAkB,EAC1E,MACF,CAEA,OAAO,qBAAqB,KAAK,cAAc,CACjD,EA3CE,GAAM,CAAE,iBAAAC,CAAiB,EAAI,KAAK,uBAAyB,EAC3DA,EAAiB,UAAWC,GAA6B,CAzC7D,IAAAC,EAAAC,EA0CM,KAAK,kBAAmBA,GAAAD,EAAAD,EAAY,OAAZ,YAAAC,EAAkB,QAAlB,KAAAC,EAA2BC,EAAe,IACpE,CAAC,EAED,GAAM,CAAE,UAAAP,CAAU,EAAI,KAAK,8BAAgC,EAC3DA,EAAU,UAAU,CACtB,CAEU,aACRQ,EACM,CACN,MAAM,aAAaA,CAAkB,EACrCC,EAAY,KAAK,KAAM,eAAe,CACxC,CAEU,QAAQD,EAA6E,CAC7F,MAAM,QAAQA,CAAkB,EACtB,CAAC,YAAa,oBAAqB,WAAW,EAElD,KAAME,GAAaF,EAAmB,IAAIE,CAAQ,CAAC,GACvD,KAAK,mBAAmB,CAE5B,CA2BQ,+BAAgC,CACtC,IAAMC,EAAmB,OAAO,YAAc,EACxC,CAAE,IAAAC,CAAI,EAAI,KAAK,cAAc,sBAAsB,EAEzD,GAAIA,EAAMD,EAAkB,CAC1B,KAAK,aAAe,cACpB,MACF,CAEA,KAAK,aAAe,UACtB,CAQQ,iCAAkC,CACxC,IAAME,EAAqB,OAAO,WAAa,EACzC,CAAE,KAAAC,CAAK,EAAI,KAAK,cAAc,sBAAsB,EAE1D,GAAIA,EAAOD,EAAoB,CAC7B,KAAK,eAAiB,YACtB,MACF,CAEA,KAAK,eAAiB,YACxB,CAQQ,eAAgB,CACtB,KAAK,UAAU,iBAAkB,CAAC,CAAC,CACrC,CAOQ,eAAgB,CACtB,KAAK,UAAU,iBAAkB,CAAC,CAAC,CACrC,CAOQ,uBAAwB,CAC9B,KAAK,UAAU,2BAA4B,CAAC,CAAC,CAC/C,CAQQ,kBAAmB,CACzB,GAAI,CAAC,KAAK,UAAW,MAAO,GAE5B,GAAM,CAAE,KAAAE,EAAM,MAAAC,CAAM,EAAI,KAAK,UAE7B,OAAOC;AAAA;AAAA,6BAEkBD,CAAK;AAAA;AAAA;AAAA,qBAGbD,CAAI;AAAA;AAAA;AAAA,mBAGN,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA,WAKnC,CAEQ,0BAA2B,CACjC,OAAK,KAAK,kBAEHE;AAAA;AAAA,6BAEkB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAM/B,KAAK,qBAAqB;AAAA;AAAA;AAAA;AAAA,YAVL,EAetC,CAEQ,gBAAiB,CACvB,OAAK,KAAK,UAEHA;AAAA;AAAA,6BAEkB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAM/B,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA,YAVL,EAe9B,CAEU,QAAS,CACjB,IAAMC,EAAY,CAChB,mCAAoC,GACpC,CAAC,KAAK,YAAY,EAAG,GACrB,CAAC,KAAK,cAAc,EAAG,EACzB,EAEA,OAAOD,gBAAmBE,EAASD,CAAS,CAAC;AAAA,QACzC,KAAK,iBAAiB,CAAC,IAAI,KAAK,yBAAyB,CAAC,IAAI,KAAK,eAAe,CAAC;AAAA,WAEzF,CACF,EA1ManB,EACJ,OAASF,EADLE,EAYJ,WAAa,CAClB,kBAAmB,CAAE,KAAM,OAAQ,EACnC,UAAW,CAAE,KAAM,OAAQ,EAC3B,aAAc,CAAE,KAAM,MAAO,EAC7B,eAAgB,CAAE,KAAM,MAAO,CACjC,EAjBWA,EAANqB,EAAA,CADNC,EAAc,iCAAiC,GACnCtB,GEnBbuB,IAeA,IAAMC,EAA2BC,EAAkBC,CAAU,EACvDC,EAA2B,CAACH,EAAyB,OAAQI,CAAa,EAGnEC,EAAN,cAAkCL,CAAyB,CA4BhE,aAAc,CACZ,MAAM,EAiCR,KAAQ,mBAAsBM,GAAiB,CAG7C,GAFAA,EAAM,gBAAgB,EAElB,CAAC,KAAK,KAAM,OAEhB,IAAMC,EAAWD,EAAM,aAAa,EAC9BE,EAAkB,KAAK,WAAW,cAAc,mBAAmB,EACnEC,EAAe,KAAK,WAAW,cAAc,gBAAgB,EAE7DC,EADe,KAAK,WAAW,cAAc,uBAAuB,EACzC,iBAAiB,EAAE,CAAC,EAC/CC,EAAqBJ,EAAS,SAASC,CAAe,EACtDI,EAAkBL,EAAS,SAASE,CAAY,EAChDI,EAAiBN,EAAS,SAASG,CAAW,EAE9CC,GAAsBC,GAAmBC,GAC7C,KAAK,MAAM,CAEf,EAEA,KAAQ,MAAQ,IAAM,CACpB,KAAK,KAAO,GACZ,KAAK,SAAW,GAChB,KAAK,UAAU,WAAY,CACzB,QAAS,GACT,SAAU,EACZ,CAAC,CACH,EAEA,KAAQ,kBAAoB,CAACC,EAAuBC,IAC3C,IAAM,CACPA,IAEJ,KAAK,SAAWD,EAClB,EAoBF,KAAQ,kBAAoB,CAAC,CAAE,OAAQ,CAAE,KAAAE,CAAK,CAAE,IAAmB,CACjE,KAAK,uBAAyB,CAAC,KAAK,uBAE/BA,IACH,KAAK,SAAW,GAEpB,EAkFA,KAAQ,QAAU,IACX,KAAK,mBAEHC;AAAA,oBACS,KAAK,UAAU,CAAE,KAAM,UAAW,CAAC,CAAC;AAAA;AAAA;AAAA,0BAHf,GASvC,KAAQ,mBAAqB,IAAM,CACjC,GAAI,CAAC,KAAK,MAAQ,CAAC,KAAK,cAAe,CACrC,OAAO,qBAAqB,KAAK,cAAc,EAC/C,MACF,CAEA,KAAK,8BAA8B,EACnC,KAAK,gCAAgC,EAErC,KAAK,eAAiB,OAAO,sBAAsB,KAAK,kBAAkB,CAC5E,EAEA,KAAQ,8BAAgC,IAAM,CAC5C,GAAM,CAAE,OAAAC,EAAQ,IAAAC,EAAK,OAAAC,CAAO,EAAI,KAAK,cAAc,sBAAsB,EACnEC,EAAyB,OAAO,YAAc,EAGpD,GAFiCF,EAAMC,EAAS,EAEjBC,EAAwB,CACrD,KAAK,aAAa,MAAM,YAAY,SAAU,GAAG,OAAO,YAAcF,EAAM,CAAC,IAAI,EACjF,KAAK,aAAa,MAAM,YAAY,MAAO,EAAE,EAC7C,MACF,CAEA,KAAK,aAAa,MAAM,YAAY,MAAO,GAAGD,EAAS,CAAC,IAAI,EAC5D,KAAK,aAAa,MAAM,YAAY,SAAU,EAAE,CAClD,EAEA,KAAQ,gCAAkC,IAAM,CAC9C,GAAM,CAAE,MAAAI,EAAO,KAAAC,CAAK,EAAI,KAAK,cAAc,sBAAsB,EACjE,KAAK,aAAa,MAAM,YAAY,QAAS,GAAG,OAAO,WAAaD,CAAK,IAAI,EAC7E,KAAK,aAAa,MAAM,YAAY,OAAQ,GAAGC,CAAI,IAAI,CACzD,EAtNE,KAAK,SAAW,GAChB,KAAK,uBAAyB,GAE9B,GAAM,CAAE,OAAAC,CAAO,EAAI,KAAK,8BAAgC,EACxDA,EAAO,UAAWC,GAAiB,CACjC,KAAK,aAAeA,CACtB,CAAC,CACH,CAEU,aACRC,EACM,CACN,KAAK,WAAW,cAAc,iCAAiC,EAAE,UAAY,EAC7EC,EAAY,KAAK,KAAM,eAAe,EAEtC,KAAK,aAAe,KAAK,WAAW,cAAc,gBAAgB,EAClE,KAAK,aAAa,MAAM,SAAW,OACrC,CAEU,QAAQC,EAA4E,CAC5F,GAAKA,EAAkB,IAAI,MAAM,EAIjC,IAFA,KAAK,UAAU,wBAAyB,CAAE,KAAM,KAAK,KAAM,KAAM,QAAS,CAAC,EAEvE,KAAK,KAAM,CACb,SAAS,iBAAiB,QAAS,KAAK,kBAAkB,EAC1D,MACF,CAEA,SAAS,oBAAoB,QAAS,KAAK,kBAAkB,EAC/D,CAsCQ,UAAU,CAAE,MAAAC,EAAO,SAAAC,EAAU,YAAAC,EAAa,YAAAC,CAAY,EAAW,CACvE,OAAIF,EACKb;AAAA;AAAA,mCAEsBY,CAAK;AAAA,cAC1BC,CAAQ;AAAA,UAIXb;AAAA;AAAA,iCAEsBY,CAAK,YAAYG,CAAW;AAAA;AAAA,QAErDD,CAAW;AAAA,WAEjB,CAUQ,oBAAqB,CAC3B,GAAI,CAAC,KAAK,aAAc,OAExB,IAAME,EAAuB,KAAK,aAAa,OAAS,EAExD,OAAOC,EACL,KAAK,aACJC,GAAgBA,EAAY,GAC7B,CAACA,EAAaC,IAAU,CACtB,GAAM,CAAE,gBAAArB,EAAiB,GAAAsB,EAAI,OAAAC,EAAQ,SAAAC,EAAU,QAAAC,EAAS,KAAAC,CAAK,EAAIN,EAE3DO,EAAiB,CACrB,mCAAoC,GACpC,6CAA8C,KAAK,WAAaL,EAChE,mBAAoBtB,CACtB,EAEM4B,EAAc,CAClB,oCAAqC,GACrC,YAAa5B,CACf,EAEM6B,EAAoBR,IAAUH,EAEpC,OAAOhB;AAAA;AAAA,oBAEK,KAAK,UAAUsB,CAAQ,CAAC;AAAA,uBACrB,KAAK,UAAU,CAAE,cAAeF,EAAI,OAAQ,QAAS,CAAC,CAAC;AAAA,wBACtD,KAAK,UAAUG,CAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKzBzB,CAAe;AAAA,4BACT,KAAK,sBAAsB;AAAA,8BACzB,EAAI;AAAA,6BACL6B,CAAiB;AAAA,mCACX,KAAK,iBAAiB;AAAA,sBACnC,KAAK,KAAK;AAAA;AAAA;AAAA,kBAGdC,EAASH,CAAc,CAAC;AAAA,mBACvB,KAAK,kBAAkBL,EAAItB,CAAe,CAAC;AAAA;AAAA,cAEhDuB,EAAO,KAAK;AAAA,gBACV,KAAK,UAAUA,CAAM,CAAC;AAAA;AAAA,4DAEsBG,CAAI;AAAA;AAAA,sBAE1CI,EAASF,CAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUrC,CACF,CACF,CAEQ,QAAS,CACf,KAAK,KAAO,CAAC,KAAK,KAEb,KAAK,OACV,KAAK,SAAW,GAChB,KAAK,mBAAmB,EAC1B,CAEA,IAAY,aAAc,CACxB,MAAO,CACL,iCAAkC,GAClC,eAAgB,KAAK,WAAa,cAClC,YAAa,KAAK,WAAa,WAC/B,YAAa,KAAK,IACpB,CACF,CA6CU,QAAS,CACjB,OAAO1B;AAAA;AAAA,+CAEoC,KAAK,MAAM;AAAA;AAAA;AAAA,UAGhD,KAAK,QAAQ,CAAC;AAAA;AAAA;AAAA,qBAGH4B,EAAS,KAAK,WAAW,CAAC,IAAI,KAAK,mBAAmB,CAAC;AAAA;AAAA,KAG1E,CACF,EAnQaxC,EACJ,OAASF,EADLE,EAgBJ,WAAa,CAClB,KAAM,CAAE,KAAM,OAAQ,EACtB,MAAO,CAAE,KAAM,MAAO,EACtB,SAAU,CAAE,KAAM,MAAO,EACzB,SAAU,CAAE,KAAM,MAAO,EACzB,gBAAiB,CAAE,KAAM,OAAQ,EACjC,mBAAoB,CAAE,KAAM,OAAQ,EACpC,uBAAwB,CAAE,KAAM,OAAQ,EACxC,+BAAgC,CAAE,KAAM,OAAQ,EAChD,aAAc,CAAE,KAAM,MAAO,CAC/B,EA1BWA,EAANyC,EAAA,CADNC,EAAc,iCAAiC,GACnC1C",
  "names": ["init_define_process_env", "init_define_process_env", "init_define_process_env", "init_define_process_env", "whoIsOnlineStyle", "i", "init_define_process_env", "dropdownStyle", "i", "init_define_process_env", "messagesStyle", "i", "WebComponentsBaseElement", "WebComponentsBase", "s", "styles", "whoIsOnlineStyle", "WhoIsOnline", "detail", "label", "participantId", "source", "localParticipant", "participants", "following", "extras", "disablePresenceControls", "value", "_a", "_b", "joinedPresence", "component", "_changedProperties", "importStyle", "index", "thereAreExtraParticipants", "isTheLastParticipantOfList", "classes", "x", "e", "color", "imageUrl", "firstLetter", "letterColor", "c", "participant", "avatar", "id", "name", "tooltip", "controls", "disableDropdown", "isLocalParticipant", "position", "participantIsFollowed", "classList", "changedProperties", "element", "side", "style", "__decorateClass", "CreateElement", "init_define_process_env", "init_define_process_env", "init_define_process_env", "WebComponentsBaseElement", "WebComponentsBase", "s", "styles", "messagesStyle", "WhoIsOnlineMessages", "following", "everyoneFollowsMe", "isPrivate", "localParticipant", "participant", "_a", "_b", "MEETING_COLORS", "_changedProperties", "importStyle", "property", "verticalMidpoint", "top", "horizontalMidpoint", "left", "name", "color", "x", "classList", "e", "__decorateClass", "CreateElement", "init_define_process_env", "WebComponentsBaseElement", "WebComponentsBase", "s", "styles", "dropdownStyle", "WhoIsOnlineDropdown", "event", "elements", "dropdownContent", "dropdownList", "dropdownCta", "hasDropdownContent", "hasDropdownList", "hasDropdownCta", "participantId", "disableDropdown", "open", "x", "bottom", "top", "height", "windowVerticalMidpoint", "right", "left", "extras", "participants", "_changedProperties", "importStyle", "changedProperties", "color", "imageUrl", "firstLetter", "letterColor", "numberOfParticipants", "c", "participant", "index", "id", "avatar", "controls", "tooltip", "name", "contentClasses", "iconClasses", "isLastParticipant", "e", "__decorateClass", "CreateElement"]
}
