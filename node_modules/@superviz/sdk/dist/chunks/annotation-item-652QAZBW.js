import{f as S}from"./chunk-AY5577XS.js";import"./chunk-UMKOLOIY.js";import{a as s}from"./chunk-XDQDK5AN.js";import"./chunk-RSMB47NK.js";import{a as f}from"./chunk-6U6BYUHV.js";import{a as y}from"./chunk-MLLFZOUT.js";import{a as o,e as C,f as g}from"./chunk-WH4S5YLH.js";import"./chunk-OQBMJDJ3.js";import{g as u,i as $}from"./chunk-3ZCZGH34.js";$();var A=y(C),b=[A.styles,S],p=class extends A{constructor(){super(...arguments);this.selectAnnotation=t=>{let{uuid:e}=this.annotation;document.body.dispatchEvent(new CustomEvent("select-annotation",{detail:{uuid:e}}))};this.resolveAnnotation=({detail:t})=>{let{uuid:e}=this.annotation,{resolved:n,type:i}=t,a=i==="resolve-annotation"&&this.annotationFilter==="All comments";this.emitEvent("resolve-annotation",{uuid:e,resolved:n}),a&&(this.shouldShowUndoResolved=!0)};this.hideUndoResolved=()=>{this.shouldShowUndoResolved=!1};this.generateExpandedCommentsTemplate=(t,e)=>{var n,i,a,r;return e===0?o``:o`
      <superviz-comments-comment-item
        uuid=${t.uuid}
        avatar=${(r=(a=(i=(n=this.annotation)==null?void 0:n.comments)==null?void 0:i.at(e))==null?void 0:a.participant)==null?void 0:r.avatar}
        username=${t.participant.name||"Anonymous"}
        text=${t.text}
        createdAt=${t.createdAt}
        annotationId=${this.annotation.uuid}
        participantsList=${JSON.stringify(this.participantsList)}
        mentions=${JSON.stringify(t.mentions)}
        class="comments__replies"
      ></superviz-comments-comment-item>
    `};this.updateEditMode=({detail:{editing:t}})=>{this.hideInput=t}}firstUpdated(t){super.firstUpdated(t),this.updateComplete.then(()=>{f.call(this,["comments"])})}get filterIsAll(){return this.annotationFilter==="All comments"}get filterIsResolved(){return this.annotationFilter==="Resolved comments"}get shouldHideAnnotation(){return{hidden:this.resolved&&this.filterIsAll||!this.resolved&&this.filterIsResolved}}get replies(){return[...this.annotation.comments].splice(1).length}get repliesSize(){return this.replies>=5?5:this.replies}get replyText(){return this.replies!==1?"replies":"reply"}get isSelected(){return this.selected===this.annotation.uuid}get annotationClasses(){return{comments__thread:!0,"comments__thread--selected":this.isSelected,"extra-space-bottom":this.replies}}get mainAnnotationClasses(){return{"comments__main-annotation":!0,"comments__main-annotation--selected":this.isSelected}}get hrClasses(){return{"sv-hr":!0,hidden:this.isLastAnnotation}}get avatarCommentsClasses(){return{"avatars-comments":!0,"comment-avatar--expand":!this.expandComments&&this.replies>1,invisible:!(!this.expandComments&&this.replies>=1)}}get containerWrapperClasses(){return{"comments-container-wrapper":!0,show:this.isSelected&&this.expandComments}}get commentsClasses(){return{"comments-container":!0,"comment-item--expand":this.isSelected&&this.expandComments,show:this.isSelected&&this.expandComments}}updated(t){if(t.has("selected")){let e=this.selected===this.annotation.uuid;this.expandComments=e}}createComment({detail:t}){let{text:e,mentions:n}=t;this.emitEvent("create-comment",{uuid:this.annotation.uuid,mentions:n,text:e})}generateAvatarCommentsTemplate(){var e,n,i,a,r,m;let t=[];for(let l=1;l<=this.repliesSize;l++)(n=(e=this.annotation.comments[l])==null?void 0:e.participant)!=null&&n.avatar?t.push(o`
          <div class="avatar">
            <img src=${(a=(i=this.annotation.comments[l])==null?void 0:i.participant)==null?void 0:a.avatar} />
          </div>
        `):t.push(o`
          <div class="avatar">
            <p class="text text-bold">
              ${((m=(r=this.annotation.comments[l])==null?void 0:r.participant.name[0])==null?void 0:m.toUpperCase())||"A"}
            </p>
          </div>
        `);return o`
      ${t}
      <div class="text text-big sv-gray-500">${this.replies} ${this.replyText}</div>
    `}annotationResolvedTemplate(){return this.shouldShowUndoResolved?o`
      <superviz-comments-annotation-resolved
        @undo-resolve=${this.resolveAnnotation}
        @hide=${this.hideUndoResolved}
        class=${s({hidden:this.filterIsResolved,"comments__resolved-annotation-message":!0})}
      >
      </superviz-comments-annotation-resolved>
    `:o``}get inputClasses(){return{"hide-input":this.hideInput}}get wrapperClasses(){return{wrapper:!0,"show-wrapper":!this.resolved&&this.filterIsAll||this.resolved&&this.filterIsResolved}}render(){var e,n,i,a,r,m,l,d,c,h,v;let t={"comments__complete-annotation":!0,"comments__hide-complete-annotation":this.shouldShowUndoResolved};return o`
      <div class="${s(t)}">
        ${this.annotationResolvedTemplate()}

        <div class=${s(this.wrapperClasses)}>
          <div class=${s(this.shouldHideAnnotation)}>
            <div class=${s(this.annotationClasses)} @click=${this.selectAnnotation}>
              <div class=${s(this.mainAnnotationClasses)}>
                <superviz-comments-comment-item
                  uuid=${(e=this.annotation.comments)==null?void 0:e[0].uuid}
                  annotationId=${this.annotation.uuid}
                  username=${((i=(n=this.annotation.comments)==null?void 0:n[0].participant)==null?void 0:i.name)||"Anonymous"}
                  text=${(a=this.annotation.comments)==null?void 0:a[0].text}
                  createdAt=${(r=this.annotation.comments)==null?void 0:r[0].createdAt}
                  participantsList=${JSON.stringify(this.participantsList)}
                  primaryComment
                  avatar=${(c=(d=(l=(m=this.annotation)==null?void 0:m.comments)==null?void 0:l.at(0))==null?void 0:d.participant)==null?void 0:c.avatar}
                  resolvable
                  ?resolved=${this.resolved}
                  annotationFilter=${this.annotationFilter}
                  @resolve-annotation=${this.resolveAnnotation}
                  mentions=${JSON.stringify((h=this.annotation.comments)==null?void 0:h[0].mentions)}
                  class="comments__annotation"
                  @edit-comment=${this.updateEditMode}
                ></superviz-comments-comment-item>
              </div>

              <div class=${s(this.containerWrapperClasses)}>
                <div class=${s(this.commentsClasses)}>
                  ${(v=this.annotation.comments)==null?void 0:v.map(this.generateExpandedCommentsTemplate)}
                  <span class=${s(this.inputClasses)}>
                    <superviz-comments-comment-input
                      @create-comment=${this.createComment}
                      eventType="create-comment"
                      @click=${x=>x.stopPropagation()}
                      placeholder="Reply"
                      participantsList=${JSON.stringify(this.participantsList)}
                    ></superviz-comments-comment-input>
                  </span>
                </div>
              </div>
              <div class=${s(this.avatarCommentsClasses)}>
                <div class="avatar-container">${this.generateAvatarCommentsTemplate()}</div>
              </div>
            </div>
            <div class=${s(this.hrClasses)}></div>
          </div>
        </div>
      </div>
    `}};p.styles=b,p.properties={annotation:{type:Object},expandComments:{type:Boolean},selected:{type:String,reflect:!0},resolved:{type:Boolean},shouldShowUndoResolved:{type:Boolean},isLastAnnotation:{type:Boolean},annotationFilter:{type:String},participantsList:{type:Object},hideInput:{type:Boolean}},p=u([g("superviz-comments-annotation-item")],p);export{p as CommentsAnnotationItem};
//# sourceMappingURL=annotation-item-652QAZBW.js.map
