{
  "version": 3,
  "sources": ["../../src/web-components/comments/components/comment-input.ts", "../../src/web-components/comments/utils/autocomplete-handler.ts", "../../src/web-components/comments/utils/mention-handler.ts"],
  "sourcesContent": ["import { CSSResultGroup, LitElement, PropertyValueMap, html } from 'lit';\n\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ParticipantByGroupApi } from '../../../common/types/participant.types';\nimport { AnnotationPositionInfo, CommentMention } from '../../../components/comments/types';\nimport { WebComponentsBase } from '../../base';\nimport importStyle from '../../base/utils/importStyle';\nimport { commentInputStyle } from '../css';\nimport { AutoCompleteHandler } from '../utils/autocomplete-handler';\nimport mentionHandler from '../utils/mention-handler';\n\nimport { CommentMode } from './types';\nimport { CreateElement } from '../../global/decorators/create-element.decorator';\n\nconst WebComponentsBaseElement = WebComponentsBase(LitElement);\nconst styles: CSSResultGroup[] = [WebComponentsBaseElement.styles, commentInputStyle];\n\n@CreateElement('superviz-comments-comment-input')\nexport class CommentsCommentInput extends WebComponentsBaseElement {\n  declare eventType: string;\n  declare text: string;\n  declare btnActive: boolean;\n  declare editable: boolean;\n  declare commentsInput: HTMLTextAreaElement;\n  declare placeholder: string;\n  declare mentionList: ParticipantByGroupApi[];\n  declare mentions: CommentMention[];\n  declare participantsList: ParticipantByGroupApi[];\n  declare hideInput: boolean;\n  declare mode: CommentMode;\n\n  private pinCoordinates: AnnotationPositionInfo | null = null;\n\n  private autoCompleteHandler: AutoCompleteHandler = new AutoCompleteHandler();\n\n  constructor() {\n    super();\n    this.btnActive = false;\n    this.text = '';\n    this.mentionList = [];\n    this.mentions = [];\n    this.mode = CommentMode.READONLY;\n  }\n\n  static styles = styles;\n\n  static properties = {\n    eventType: { type: String },\n    text: { type: String },\n    btnActive: { type: Boolean },\n    editable: { type: Boolean },\n    placeholder: { type: String },\n    mentions: { type: Array },\n    mentionList: { type: Object },\n    participantsList: { type: Object },\n    hideInput: { type: Boolean },\n    mode: { type: String },\n  };\n\n  private addAtSymbolInCaretPosition = () => {\n    const input = this.shadowRoot!.querySelector(\n      '.comments__input__textarea',\n    ) as HTMLTextAreaElement;\n    const newInputEvent = new InputEvent('input', {\n      bubbles: true,\n      cancelable: true,\n    });\n    Object.defineProperty(newInputEvent, 'data', {\n      value: '@',\n      writable: true,\n    });\n\n    input.dispatchEvent(newInputEvent);\n  };\n\n  private getCommentInput = () => {\n    return this.shadowRoot!.querySelector('.comments__input__textarea') as HTMLTextAreaElement;\n  };\n\n  private get commentInput() {\n    return this.shadowRoot!.querySelector('.comments__input__textarea') as HTMLTextAreaElement;\n  }\n\n  private get mentionButton() {\n    return this.shadowRoot!.querySelector('.mention-button') as HTMLButtonElement;\n  }\n\n  private get sendBtn() {\n    return this.shadowRoot!.querySelector('.comments__input__send-button') as HTMLButtonElement;\n  }\n\n  private get optionsContainer() {\n    return this.shadowRoot!.querySelector('.comments__input__options') as HTMLTextAreaElement;\n  }\n\n  private get horizontalRule() {\n    return this.shadowRoot!.querySelector('.sv-hr') as HTMLDivElement;\n  }\n\n  private get closeButton() {\n    return this.shadowRoot!.querySelector('.comments__input__close-button') as HTMLButtonElement;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    if (!['create-annotation', 'create-comment'].includes(this.eventType)) return;\n\n    this.addEventListener('keyup', this.sendEnter);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (!['create-annotation', 'create-comment'].includes(this.eventType)) return;\n    const textarea = this.getCommentInput();\n\n    this.removeEventListener('keyup', this.sendEnter);\n    textarea.removeEventListener('keydown', this.sendEnter);\n    textarea.removeEventListener('click', this.focusInput);\n    textarea.addEventListener('input', this.handleInput);\n  }\n\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\n  ): void {\n    this.updateComplete.then(() => {\n      this.emitEvent('comment-input-ready', {}, { composed: false, bubbles: false });\n\n      const commentTextarea = this.getCommentInput();\n\n      if (commentTextarea) {\n        commentTextarea.addEventListener('input', this.handleInput);\n        commentTextarea.addEventListener('click', this.focusInput);\n        commentTextarea.addEventListener('keydown', this.sendEnter);\n      }\n\n      if (this.text.length > 0) {\n        const mentions = this.participantsList.map(({ id, name }) => ({ userId: id, name }));\n        this.mentions = this.autoCompleteHandler.getMentions(this.text, mentions);\n        this.autoCompleteHandler.setMentions(this.mentions);\n      }\n\n      if (this.editable) {\n        this.focusInput();\n      }\n\n      importStyle.call(this, ['comments']);\n    });\n  }\n\n  updated(changedProperties: Map<string, any>) {\n    if (changedProperties.has('mode') && this.mode === CommentMode.EDITABLE) {\n      this.focusInput();\n      this.updateHeight();\n      this.sendBtn.disabled = false;\n      this.btnActive = true;\n    }\n\n    if (changedProperties.has('text') && this.text.length > 0) {\n      const commentsInput = this.commentInput;\n      commentsInput.value = this.text;\n      this.updateHeight();\n    }\n\n    if (changedProperties.has('btnActive')) {\n      this.sendBtn.disabled = !this.btnActive;\n    }\n  }\n\n  private userMentionedByTextInput = (mentions) => {\n    this.mentionList = [];\n    const mentioned = {\n      detail: {\n        ...mentions[0],\n      },\n    };\n    this.insertMention(mentioned);\n  };\n\n  private buttonAtSymbol = () => {\n    let caretIndex = this.autoCompleteHandler.getSelectionStart();\n    const getValue = this.autoCompleteHandler.getValue();\n\n    this.autoCompleteHandler.setValue(\n      `${getValue.slice(0, caretIndex)}@${getValue.slice(caretIndex, getValue.length)}`,\n    );\n\n    caretIndex += 1;\n    const keyData = this.autoCompleteHandler.getLastKeyBeforeCaret(caretIndex);\n    const keyIndex = keyData?.keyIndex ?? -1;\n    const searchText = this.autoCompleteHandler.searchMention(caretIndex, keyIndex);\n    const position = {\n      start: keyIndex + 1,\n      end: caretIndex,\n    };\n    return { searchText, position };\n  };\n\n  private focusInput = () => {\n    this.getCommentInput().focus();\n  };\n\n  private handleInput = (e: InputEvent) => {\n    if (this.commentInput?.value.length === 0) this.btnActive = false;\n    else this.btnActive = true;\n\n    this.autoCompleteHandler.setInput(e);\n    const caretIndex = this.autoCompleteHandler.getSelectionStart();\n    const keyData = this.autoCompleteHandler.getLastKeyBeforeCaret(caretIndex);\n    const keyIndex = keyData?.keyIndex ?? -1;\n\n    if (caretIndex === -1) return;\n\n    let searchText = this.autoCompleteHandler.searchMention(caretIndex, keyIndex);\n    let position = this.autoCompleteHandler.getSelectionPosition();\n\n    const isButtonAtSymbol = e.data === '@' && keyIndex === -1;\n    const isButtonAtSymbolAndNotStartedMention = e.data === '@' && caretIndex - 1 !== keyIndex;\n\n    if (isButtonAtSymbol || isButtonAtSymbolAndNotStartedMention) {\n      const data = this.buttonAtSymbol();\n      searchText = data.searchText;\n      position = data.position;\n    }\n\n    if (searchText === null) {\n      this.mentionList = [];\n      return;\n    }\n\n    const { action, mentions, findDigitParticipant } = mentionHandler.matchParticipant(\n      searchText,\n      position,\n      this.participantsList,\n    );\n\n    if (findDigitParticipant) {\n      this.userMentionedByTextInput(mentions);\n      return;\n    }\n\n    if (action === 'show') {\n      this.mentionList = mentions;\n    }\n\n    if (action === 'hide') {\n      this.mentionList = [];\n    }\n  };\n\n  private insertMention = (event) => {\n    const { id, name, avatar, email, position } = event.detail;\n\n    this.autoCompleteHandler.insertMention(position.start, position.end, {\n      id,\n      name,\n      avatar,\n      email,\n    });\n    this.mentionList = [];\n    this.updateHeight();\n  };\n\n  private updateHeight() {\n    const commentsInput = this.commentInput;\n\n    commentsInput.style.height = '40px';\n\n    let textareaHeight = commentsInput.scrollHeight + 14;\n\n    if (textareaHeight === 47) {\n      textareaHeight = 40;\n    }\n\n    commentsInput.style.height = `${textareaHeight}px`;\n\n    this.sendBtn.disabled = !(commentsInput.value.length > 0);\n  }\n\n  private sendEnter = (e: KeyboardEvent) => {\n    if (e.key !== 'Escape') {\n      e.stopImmediatePropagation();\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n    }\n\n    if (e.key !== 'Enter' || e.shiftKey || this.mentionList?.length > 0) return;\n\n    const input = this.commentInput;\n    const text = input.value.trim();\n\n    if (!text) return;\n    const mentions = this.autoCompleteHandler.getMentions(text);\n\n    this.emitEvent(\n      this.eventType,\n      {\n        text,\n        mentions,\n        position: this.pinCoordinates,\n      },\n      {\n        composed: false,\n        bubbles: false,\n      },\n    );\n\n    input.value = '';\n    this.sendBtn.disabled = true;\n    this.updateHeight();\n  };\n\n  private send(e: Event) {\n    e.preventDefault();\n    if (this.mentionList?.length > 0) return;\n\n    const input = this.commentInput;\n    const text = input.value;\n    const mentions = this.autoCompleteHandler.getMentions(text);\n\n    this.emitEvent(\n      this.eventType,\n      {\n        text,\n        mentions,\n        position: this.pinCoordinates,\n      },\n      {\n        composed: false,\n        bubbles: false,\n      },\n    );\n\n    input.value = '';\n    this.sendBtn.disabled = true;\n    this.updateHeight();\n  }\n\n  private closeEditMode = () => {\n    this.emitEvent('close-edit-mode', {}, { composed: false, bubbles: false });\n    this.hideInput = true;\n  };\n\n  private onTextareaFocus = () => {\n    const options = this.optionsContainer;\n    const rule = this.horizontalRule;\n    const textarea = this.commentInput;\n    options.classList.add('active-textarea');\n    rule.classList.add('comments__input__divisor');\n    textarea.classList.add('active-textarea');\n  };\n\n  private onTextareaLoseFocus = (e) => {\n    const target = e.explicitOriginalTarget?.parentNode?.host;\n\n    const mentionBtn = this.mentionButton;\n    if (mentionBtn === e.explicitOriginalTarget || mentionBtn === e.relatedTarget) return;\n\n    // explicitOriginalTarget is for Firefox\n    // relatedTarget is for Chrome\n    if (\n      this.closeButton.contains(target) ||\n      this.closeButton.contains(e.explicitOriginalTarget) ||\n      this.closeButton.contains(e.relatedTarget)\n    ) {\n      this.cancelComment();\n      return;\n    }\n\n    if (!this.shadowRoot.contains(e.target)) {\n      return;\n    }\n\n    const options = this.optionsContainer;\n    const rule = this.horizontalRule;\n    const textarea = this.commentInput;\n\n    if (!textarea.value.length) {\n      options.classList.remove('active-textarea');\n      rule.classList.remove('comments__input__divisor');\n      textarea.classList.remove('active-textarea');\n    }\n  };\n\n  private cancelComment = () => {\n    document.body.dispatchEvent(new KeyboardEvent('keyup', { key: 'Escape' }));\n  };\n\n  private commentInputEditableOptions = () => {\n    if (!this.editable) return;\n\n    return html`\n      <button\n        id=\"close\"\n        @click=${this.closeEditMode}\n        class=\"icon-button icon-button--medium icon-button--clickable comments__input__button comments__input__close-button\"\n      >\n        <superviz-icon name=\"close\" size=\"sm\"></superviz-icon>\n      </button>\n      <button\n        id=\"confirm\"\n        class=\"icon-button icon-button--medium icon-button--clickable icon-button--no-hover comments__input__button comments__input__send-button\"\n        disabled\n        @click=${this.send}\n      >\n        <superviz-icon\n          color=${this.sendBtn?.disabled || !this.sendBtn ? 'black' : 'white'}\n          name=\"check\"\n          size=\"sm\"\n        ></superviz-icon>\n      </button>\n    `;\n  };\n\n  private commentInputOptions = () => {\n    if (this.editable) return;\n\n    return html`\n      <button\n        class=\"icon-button icon-button--medium icon-button--clickable comments__input__button comments__input__close-button align-send-btn\"\n        @click=${this.cancelComment}\n      >\n        <superviz-icon name=\"close\" size=\"sm\"></superviz-icon>\n      </button>\n      <button\n        class=\"comments__input__button comments__input__send-button align-send-btn\"\n        disabled\n        @click=${this.send}\n      >\n        <superviz-icon\n          color=${this.sendBtn?.disabled || !this.sendBtn ? 'black' : 'white'}\n          name=\"line-arrow-right\"\n          size=\"sm\"\n        ></superviz-icon>\n      </button>\n    `;\n  };\n\n  protected render() {\n    const textAreaClasses = {\n      comments__input__textarea: true,\n      'fixed-width': this.eventType === 'create-annotation',\n    };\n\n    const commentsInputClasses = {\n      comments__input: true,\n      'comments__input--editable': this.editable,\n      'hide-input': this.hideInput,\n    };\n\n    return html`\n      <div class=\"${classMap(commentsInputClasses)}\">\n        <textarea\n          id=\"comments__input__textarea\"\n          class=${classMap(textAreaClasses)}\n          placeholder=${this.placeholder ?? 'Add comment...'}\n          @input=${this.updateHeight}\n          @focus=${this.onTextareaFocus}\n          @blur=${this.onTextareaLoseFocus}\n          spellcheck=\"false\"\n        ></textarea>\n        <superviz-comments-mention-list\n          .participants=${this.mentionList}\n          @participant-selected=${this.insertMention}\n        ></superviz-comments-mention-list>\n        <div class=\"sv-hr\"></div>\n        <div class=\"comments__input__options\">\n          <button\n            @click=${this.addAtSymbolInCaretPosition}\n            class=\"mention-button icon-button icon-button--medium icon-button--clickable\"\n          >\n            <superviz-icon name=\"mention\" size=\"sm\"></superviz-icon>\n          </button>\n          <div class=\"comment-input-options\">\n            ${this.commentInputOptions()} ${this.commentInputEditableOptions()}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n", "import { ParticipantByGroupApi } from '../../../common/types/participant.types';\nimport { CommentMention } from '../../../components/comments/types';\n\nexport class AutoCompleteHandler {\n  constructor () {\n    this.input = null\n    this.mentions = []\n  }\n\n  private readonly keys = ['@']\n  event: InputEvent\n  input: HTMLTextAreaElement\n  key: string\n  mentions: CommentMention[]\n\n  setInput (event: InputEvent) {\n    this.event = event\n    this.input = event.target as HTMLTextAreaElement\n\n    this.key = event.data\n  }\n\n  getMentions(input, mentions: CommentMention[]= []) {\n    if (mentions.length > 0) {\n      this.mentions = mentions\n    }\n\n    return this.mentions.filter((mention) => {\n      const hasParticipantName = (mention, input) => input.includes(mention.name);\n\n      return hasParticipantName(mention, input);\n    });\n  }\n\n  setMentions (mentions) {\n    this.mentions = mentions\n  }\n\n  addMention (mention: { userId: string, name: string }) {\n    const isDuplicated = this.mentions.some((m) => m.userId === mention.userId);\n    if (!isDuplicated) {\n      this.mentions.push(mention);\n    }\n  }\n\n  clearMentions () {\n    this.mentions = []\n  }\n\n  getSelectionPosition () {\n    const caretIndex = this.getSelectionStart()\n    const keyData = this.getLastKeyBeforeCaret(caretIndex)\n    const keyIndex = keyData?.keyIndex ?? -1\n\n    return {\n      start: keyIndex + 1,\n      end: caretIndex,\n    }\n  }\n\n  getSelectionStart () {\n    return this.input?.selectionStart\n  }\n\n  setCaretPosition (index) {\n    this.input.selectionEnd = index\n  }\n\n  getValue () {\n    return this.input?.value\n  }\n\n  setValue (value) {\n    this.input.value = value\n  }\n\n  getLastKeyBeforeCaret (caretIndex) {\n    const [keyData] = this.keys.map(key => ({\n      key,\n      keyIndex: this.getValue().lastIndexOf(key, caretIndex - 1),\n    })).sort((a, b) => b.keyIndex - a.keyIndex)\n    return keyData\n  }\n\n  searchMention (caretIndex, keyIndex) {\n    if (keyIndex !== -1) {\n      const searchText = this.getValue().substring(keyIndex + 1, caretIndex)\n\n      return searchText\n    }\n    \n    return null\n  }\n\n  isDeletion (): boolean {\n    return this.event.inputType === 'deleteContentBackward' || this.event.inputType === 'deleteContentForward' || this.event.inputType === 'deleteWordBackward'\n  }\n\n  insertMention (start: number, end: number, participant: ParticipantByGroupApi) {\n    if (this.isDeletion()) {\n      return\n    }\n\n    const { id, name } = participant\n    const text = `${this.getValue().slice(0, start) + name} ${this.getValue().slice(end, this.getValue().length)}`\n\n    this.setValue(text)\n    this.input.focus()\n\n    this.addMention({\n      userId: id,\n      name\n    })\n\n    this.setCaretPosition(start + name.length + 1)\n  }\n}\n", "import { ParticipantByGroupApi } from '../../../common/types/participant.types';\n\nconst MENTION_ACTION = {\n  SHOW: 'show',\n  HIDE: 'hide',\n};\n\nconst DEFAULT_HIDE_MENTION_LIST = {\n  action: MENTION_ACTION.HIDE,\n  mentions: [],\n  findDigitParticipant: false,\n};\n\ntype hideMentionList = {\n  action: string;\n  mentions: ParticipantByGroupApi[];\n  findDigitParticipant: boolean;\n};\n\nconst matchParticipant = (\n  name: string,\n  position,\n  participantList: ParticipantByGroupApi[],\n): hideMentionList => {\n  let mentionList = [];\n\n  mentionList = participantList?.filter((participant: ParticipantByGroupApi) => participant?.email);\n  if (name.length > 0) {\n    mentionList = mentionList.filter(\n      (participant: ParticipantByGroupApi) =>\n        participant?.name.toLowerCase().search(name.toLowerCase()) !== -1,\n    );\n\n    if (name === mentionList[0]?.name?.toLowerCase()) {\n      const mentions = prepareMentionList(mentionList, position);\n      return {\n        action: MENTION_ACTION.HIDE,\n        mentions,\n        findDigitParticipant: true,\n      };\n    }\n  }\n\n  if (!(mentionList?.length > 0)) {\n    return DEFAULT_HIDE_MENTION_LIST;\n  }\n\n  const mentions = prepareMentionList(mentionList, position);\n\n  return {\n    action: MENTION_ACTION.SHOW,\n    mentions,\n    findDigitParticipant: false,\n  };\n};\n\nconst prepareMentionList = (users: ParticipantByGroupApi[], position): ParticipantByGroupApi[] => {\n  return users.map((user: ParticipantByGroupApi) => ({\n    id: user.id,\n    name: user.name,\n    avatar: user.avatar,\n    email: user.email,\n    position,\n  }));\n};\n\nexport default {\n  matchParticipant: (name, position, participantList: ParticipantByGroupApi[]) =>\n    matchParticipant(name, position, participantList),\n};\n"],
  "mappings": "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",
  "names": ["init_define_process_env", "init_define_process_env", "AutoCompleteHandler", "event", "input", "mentions", "mention", "m", "_a", "caretIndex", "keyData", "index", "value", "key", "a", "b", "keyIndex", "start", "end", "participant", "id", "name", "text", "init_define_process_env", "MENTION_ACTION", "DEFAULT_HIDE_MENTION_LIST", "matchParticipant", "name", "position", "participantList", "_a", "_b", "mentionList", "participant", "mentions", "prepareMentionList", "users", "user", "mention_handler_default", "WebComponentsBaseElement", "WebComponentsBase", "s", "styles", "commentInputStyle", "CommentsCommentInput", "AutoCompleteHandler", "input", "newInputEvent", "mentions", "mentioned", "__spreadValues", "_a", "caretIndex", "getValue", "keyData", "keyIndex", "searchText", "position", "e", "_b", "isButtonAtSymbol", "isButtonAtSymbolAndNotStartedMention", "data", "action", "findDigitParticipant", "mention_handler_default", "event", "id", "name", "avatar", "email", "text", "options", "rule", "textarea", "target", "mentionBtn", "x", "_changedProperties", "commentTextarea", "importStyle", "changedProperties", "commentsInput", "textareaHeight", "textAreaClasses", "commentsInputClasses", "__decorateClass", "CreateElement"]
}
